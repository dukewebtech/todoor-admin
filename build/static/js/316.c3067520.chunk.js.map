{"version":3,"file":"static/js/316.c3067520.chunk.js","mappings":"oSAmJA,IA5GA,SAAsBA,GACpB,MAAsBC,EAAAA,SAAe,IAArC,eAKMC,GALN,WAKgBC,EAAAA,EAAAA,OAQRC,IAFSC,EAAAA,EAAAA,MAEWC,EAAAA,EAAAA,MAApBF,iBACR,EAA4CG,EAAAA,EAAAA,mBAA5C,eAAOC,EAAP,KAiCA,OAjCA,MAEeC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,SAAU,GACVC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,SAAUG,EAAAA,KAAaC,OAAOC,WAC9BJ,SAAUE,EAAAA,KAAaC,OAAOC,aAEhCC,SAAS,WAAD,8BAAE,WAAOC,GAAP,mFACRC,QAAQC,IAAIF,GAlBdhB,EAAQ,oBAiBE,kBAMaM,EAAa,CAAEa,KAAMH,IAAUI,SAN5C,cASNlB,EAAgB,uBAAwB,CAAEmB,QAAS,YAT7C,gDAWNnB,EAAe,OAAC,EAAD,6BAAC,KAAOiB,YAAR,aAAC,EAAaG,QAAS,kBAAmB,CACvDD,QAAS,UAZL,yDAAF,mDAAC,MAuBT,gBACEE,UAAW,OACXC,MAAO,CACLC,OAAQ,OACRC,WAAY5B,EAAM6B,UAAY,oBAAsB,QAJxD,UAOE,gBACEJ,UACEzB,EAAM8B,MACF,wCACA9B,EAAM+B,MACN,WACA/B,EAAMgC,MACN,6BACAhC,EAAMiC,IACN,YACA,0BAENC,GAAI,CACFC,SAAUnC,EAAMiC,IAAM,IAAM,IAC5BG,UAAWpC,EAAMiC,IAAM,IAAM,KAdjC,UAiBE,iBAAKR,UAAWzB,EAAMqC,SAAW,SAAW,OAA5C,WACE,0BACE,SAAC,IAAD,CACEZ,UACEzB,EAAM+B,OAAS/B,EAAMgC,MACjB,0BACAhC,EAAMsC,UACN,iCACA,0CAENJ,GAAI,CAAEK,SAAU,IARlB,SAUGvC,EAAMwC,MAAQ,uBAGnB,0BACE,SAAC,IAAD,CACEjB,QAASvB,EAAMyC,MAAQ,KAAO,KAC9BhB,UACEzB,EAAMgC,MACF,mCACA,0CALR,UAQkB,YAAdhC,EAAMwC,KAAN,iBAA+BxC,EAAM0C,OAAU1C,EAAM0C,QAAU,cAS9E,C,kSCqDD,MAvJA,SAAsB1C,GACpB,MAAsBC,EAAAA,SAAe,IAArC,eACA,GADA,WACwB0C,EAAAA,EAAAA,WAAS,IAAjC,eAAOC,EAAP,KAKM1C,GALN,MAKgBC,EAAAA,EAAAA,OAoCRC,IAFSC,EAAAA,EAAAA,MAEWC,EAAAA,EAAAA,MAApBF,iBACR,EAA4CG,EAAAA,EAAAA,mBAA5C,eAAOC,EAAP,KAkCA,OAlCA,MAEeC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,SAAU,GACVC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,SAAUG,EAAAA,KAAaC,OAAOC,WAC9BJ,SAAUE,EAAAA,KAAaC,OAAOC,aAEhCC,SAAS,WAAD,8BAAE,WAAOC,GAAP,mFACRC,QAAQC,IAAIF,GA9CdhB,EAAQ,oBA6CE,kBAMaM,EAAa,CAAEa,KAAMH,IAAUI,SAN5C,cASNlB,EAAgB,uBAAwB,CAAEmB,QAAS,YAT7C,gDAWNnB,EAAe,OAAC,EAAD,6BAAC,KAAOiB,YAAR,aAAC,EAAaG,QAAS,kBAAmB,CACvDD,QAAS,UAZL,yDAAF,mDAAC,KAiBXJ,QAAQC,IAAIwB,IAOV,0BAGE,SAAC,IAAD,WACE,cAAGC,KAAK,4DAA4DC,OAAO,SAA3E,qEAkEP,C","sources":["common/NewWallCards.js","features/support/Support.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from \"images/Rectangle 7.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction NewWallCards(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      className={\"p-20\"}\r\n      style={{\r\n        border: \"none\",\r\n        borderLeft: props.cutborder ? \"1px solid #C4C4C4\" : \"none\",\r\n      }}\r\n    >\r\n      <div\r\n        className={\r\n          props.rider\r\n            ? \"riders-bg text-white text-center mr-3\"\r\n            : props.plain\r\n            ? \"plain-bg\"\r\n            : props.green\r\n            ? \"bg-primary-main text-white\"\r\n            : props.big\r\n            ? \"text-left\"\r\n            : \" text-white text-center\"\r\n        }\r\n        sx={{\r\n          minWidth: props.big ? 220 : 155,\r\n          minHeight: props.big ? 160 : 120,\r\n        }}\r\n      >\r\n        <div className={props.bigspace ? \" pr-10\" : \"px-5\"}>\r\n          <div>\r\n            <Typography\r\n              className={\r\n                props.plain || props.green\r\n                  ? \" text-center text-white\"\r\n                  : props.dashboard\r\n                  ? \"text-center text-primary-main \"\r\n                  : \"text-center text-primary-main font-bold\"\r\n              }\r\n              sx={{ fontSize: 12 }}\r\n            >\r\n              {props.name || \"Total Companies\"}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              variant={props.small ? \"h4\" : \"h2\"}\r\n              className={\r\n                props.green\r\n                  ? \"text-white text-center font-bold\"\r\n                  : \"text-center font-bold text-primary-main\"\r\n              }\r\n            >\r\n              {(props.name == 'Earnings'? `â‚¦ ${props.count}` : props.count) || '0'}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <Button size=\"small\">Learn More</Button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewWallCards;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport { BsFillCircleFill, BsPeople } from \"react-icons/bs\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport customer from \"images/tabler_helmet.png\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Rating,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport ManageCompanyCard from \"features/manageCompanies/ManageCompanyCard\";\r\nimport ManageCompaniesTable from \"features/manageCompanies/ManageCompaniesTable\";\r\n\r\nimport { RiArrowLeftSLine } from \"react-icons/ri\";\r\nimport SupportChart from \"./SupportChart\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nfunction ManageRiders(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  // const handleChange = (event) => {\r\n  //   setAge(event.target.value);\r\n  //   console.log(event)\r\n  // };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const tableArray = [\r\n    {\r\n      image: gigLogo,\r\n      name: \"Taiwo Daniel  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n      message: \"Hello\",\r\n    },\r\n\r\n    {\r\n      image: gigLogo,\r\n      name: \"Triumph Boyace  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      message: \"Hi\",\r\n      ratings: \"4\",\r\n    },\r\n    {\r\n      image: gigLogo,\r\n      name: \"Tina Kumi  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      message: \"I've been waiting\",\r\n      ratings: \"4\",\r\n    },\r\n  ];\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n  console.log(show);\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {/* <ToDoorSearch /> */}\r\n\r\n      <Button>\r\n        <a href=\" https://tawk.to/chat/6401e42f4247f20fefe3c351/1gqjm6n0q \" target='_blank'>\r\n          Please click here to be directed to our support page\r\n        </a>\r\n      </Button>\r\n      {/* {!show && (\r\n        <div>\r\n          <div className=\"mb-4\">\r\n            <Button\r\n              startIcon={<BsPeople />}\r\n              className=\"px-7 py-2 text-base mr-4 min-w-[140px]\"\r\n            >\r\n              Customers\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<img src={customer} />}\r\n              className=\"px-7 bg-transparent text-[#8C8C8C] border2 py-2 text-base min-w-[120px]\"\r\n            >\r\n              Riders\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"mb-4 flex\">\r\n            <p\r\n              style={{ borderBottom: \"2px solid #0C3BAA\" }}\r\n              className=\"mr-4 p-1\"\r\n            >\r\n              All Messages\r\n            </p>\r\n            <div className=\"flex items-center\">\r\n              <p className=\"p-1\">Unread</p>\r\n              <BsFillCircleFill color=\"blue\" fontSize={6} />\r\n            </div>\r\n          </div>\r\n\r\n          {tableArray.map((e) => (\r\n            <div\r\n              style={{ border: \"1px solid #DADADA\" }}\r\n              className=\" px-5 mt-1 flex justify-between border2 background-table min-h-[50%]\"\r\n            >\r\n              <div className=\"w-full flex items-center p-2 \">\r\n                <img src={gigLogo} className=\"rounded-full\" />\r\n                <div className=\"w-full p-3 \">\r\n                  <Typography variant=\"h6\">{e.name}</Typography>\r\n                  <p className=\"medium-size\">{e.message}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\" w-full flex justify-end items-center p-2 \">\r\n                <p\r\n                  onClick={() => {\r\n                    setShow(!show);\r\n                  }}\r\n                  className=\"font-bold cursor-pointer\"\r\n                >\r\n                  View Profile\r\n                </p>\r\n              </div>\r\n              \r\n            </div>\r\n          ))}\r\n        </div>\r\n      )} */}\r\n\r\n      {/* {show && <SupportChart setOpen={setShow} open={show} />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageRiders;\r\n"],"names":["props","React","history","useNavigate","enqueueSnackbar","useAuthUser","useSnackbar","UserApi","loginMuation","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","console","log","data","unwrap","variant","message","className","style","border","borderLeft","cutborder","rider","plain","green","big","sx","minWidth","minHeight","bigspace","dashboard","fontSize","name","small","count","useState","show","href","target"],"sourceRoot":""}