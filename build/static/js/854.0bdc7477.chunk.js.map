{"version":3,"file":"static/js/854.0bdc7477.chunk.js","mappings":"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","sources":["features/maps/Maps.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n// import UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\n// import PasswordTextField from \"common/PasswordTextField\";\r\n// import { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { BsCircleFill } from \"react-icons/bs\";\r\nimport { post, get, put } from \"services/fetch\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport {\r\n  useJsApiLoader,\r\n  GoogleMap,\r\n  Marker,\r\n  Autocomplete,\r\n  DirectionsRenderer,\r\n} from \"@react-google-maps/api\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\n\r\nimport sedan from \"images/sedan.png\";\r\nimport markerImage from \"images/todoor image.png\";\r\n\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  TableBody,\r\n  TableCell,\r\n  Table,\r\n  Input,\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\n// import ManageCompanyCard from '.features/manageCompanies/ManageCompanyCard';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import { makeStyles } from '@mui/styles';\r\nimport socketio from \"socket.io-client\";\r\n\r\n// const client = new W3CWebSocket(\"ws://todoorapp.com\");\r\n\r\nfunction Trips(props) {\r\n  const [map, setMap] = useState(/** @type google.maps.map*/ (null));\r\n  const [distance, setDistance] = useState(/** @type google.maps.map*/ (null));\r\n  const [center, setCenter] = useState({\r\n    lat: 7,\r\n    lng: 5,\r\n  });\r\n  const [allRiders, setAllRiders] = useState([]);\r\n  const [duration, setDuration] = useState(/** @type google.maps.map*/ (null));\r\n  const [count, setcount] = useState(0);\r\n  const [directionResponse, setDirectionResponse] = useState(\r\n    /** @type google.maps.map*/ (null)\r\n  );\r\n\r\n  const mapRef = useRef(null);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n  let SOCKET_URL = `todoorapp.com:3000`;\r\n  let token = localStorage.getItem(\"token\").slice(0, 7);\r\n\r\n  const onMarkerClick = (marker) => {\r\n    setSelectedMarker(marker);\r\n    const map = mapRef.current;\r\n    if (map) {\r\n      map.panTo(marker.getPosition());\r\n      map.setZoom(15);\r\n    }\r\n  };\r\n\r\n  // const [center, setcenter] = useState({\r\n  //   lat: 6.458985,\r\n  //   lng: 3.601521,\r\n  // });\r\n  // const [centers, setcenters] = useState([\r\n  //   {\r\n  //     lat: 37.772,\r\n  //     lng: -122.214,\r\n  //   },\r\n  //   {\r\n  //     lat: 37.672,\r\n  //     lng: -122.219,\r\n  //   },\r\n  //   {\r\n  //     lat: 37.832,\r\n  //     lng: -122.424,\r\n  //   },\r\n  // ]);\r\n  // let center = {\r\n  //   lat: allRiders[0]?.gpsLoc[1],\r\n  //   lng: allRiders[0]?.gpsLoc[0],\r\n  // };\r\n\r\n  const ridersUnderCompanyR = async (companyId) => {\r\n    const res = await get({\r\n      endpoint: `api/super-admin/getActiveRiders`,\r\n      //  body: { ...payload },\r\n      auth: true,\r\n    });\r\n    // console.log(res?.data);\r\n    setAllRiders(res?.data);\r\n    return res?.data?.length;\r\n  };\r\n\r\n  const ridersUnderCompanyK = async (companyId) => {\r\n    const res = await get({\r\n      endpoint: `api/super-admin/getActiveRiders`,\r\n      //  body: { ...payload },\r\n      auth: true,\r\n    });\r\n    console.log(res?.data[0]);\r\n    getLocationData(res?.data[0]);\r\n  };\r\n  const getLocationData = (e) => {\r\n    // setDestination({ lat: e?.gpsLoc[1], lng: e?.gpsLoc[0] });\r\n    if (map) {\r\n      console.log(e?.gpsLoc);\r\n\r\n      const bounds = new window.google.maps.LatLngBounds();\r\n      // bounds.extend(new window.google.maps.LatLng(center.lat, center.lng));\r\n      bounds.extend(new window.google.maps.LatLng(e?.gpsLoc[1], e?.gpsLoc[0]));\r\n      map.fitBounds(bounds);\r\n      map.panTo(new window.google.maps.LatLng(e?.gpsLoc[1], e?.gpsLoc[0]));\r\n    }\r\n  };\r\n\r\n  // const initSocket = () => {\r\n  //   const socket = socketio(\r\n  //     SOCKET_URL,\r\n  //         {\r\n  //       query: { token },\r\n  //     }\r\n  //   );\r\n  //   // socket.on(\"connect\", () => {\r\n  //   //   console.log(\"Connected\");\r\n  //   // });\r\n  //   // this.setState({ socket });\r\n  // };\r\n  // useEffect(() => {image\r\n  //   // client.onopen = ()=>{\r\n  //   //   console.log('Hello')\r\n  //   // }\r\n  //   ridersUnderCompanyR();\r\n  //   // initSocket();\r\n  // }, []);\r\n\r\n  // socketio.connect(SOCKET_URL, {\r\n  //   query: { token },\r\n  // });\r\n\r\n  //  let socket = useRef(null);\r\n  //  socket.current = io(\r\n  //    `todoorapp.com:3000?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWVyZ2VuY3lEZXRhaWxzIjp7InBob25lIjoiIiwibmFtZSI6bnVsbH0sImJpa2VEZXRhaWxzIjp7InR5cGUiOiJHTyIsImNvbXBhbnkiOiJNYXJ1dGkgU3V6dWtpIiwicmVnTm8iOiJOWUMgMTIzIiwiUkNfb3duZXJOYW1lIjpudWxsLCJiaWtlTm8iOm51bGwsImJpa2VNb2RlbCI6IlN3aWZ0IER6aXJlIiwicmVnRGF0ZSI6IjIwMTctMDEtMDFUMDA6MDA6MDAuMDAwWiJ9LCJsaWNlbmNlRGV0YWlscyI6eyJsaWNlbmNlTm8iOm51bGwsImlzc3VlRGF0ZSI6bnVsbCwiZXhwRGF0ZSI6bnVsbH0sImJhbmtEZXRhaWxzIjp7ImFjY291bnRObyI6bnVsbCwiaG9sZGVyTmFtZSI6bnVsbCwiYmFuayI6bnVsbH0sIl9pZCI6IjYzNTEyZDQ4MWQyYWIxMmM5NjU4MDVjMiIsImZuYW1lIjpudWxsLCJsbmFtZSI6bnVsbCwiZW1haWwiOiJzdXBlcmFkbWluQHltYWlsLmNvbSIsInBob25lTm8iOiIrMjM0OTA2NjExMjg5NSIsInBhc3N3b3JkIjoiJDJiJDEwJGlIOEl1cWZnTFc3QlE2SFNzWm9IdS45T1ZLNDZsQXVPTHp5a3FBL1NXb0RpTnpBVnhBdTZHIiwiZG9iIjoiMTk5My0xMi0wOFQwMDowMDowMC4wMDBaIiwiYmxvb2RHcm91cCI6IkIrIiwiYWRkcmVzcyI6bnVsbCwiY2l0eSI6Ik1hcnlsYW5kIiwic3RhdGUiOiJMYWdvcyIsImNvdW50cnkiOiJOaWdlcmlhIiwiZ3BzTG9jIjpbMC4yMzQyNDIzNDI0LDMuMjM0MjM0MjM0MjQyNDIzXSwibGF0aXR1ZGVEZWx0YSI6MC4wMTMsImxvbmdpdHVkZURlbHRhIjowLjAyMiwidXNlclJhdGluZyI6MCwicHJvZmlsZVVybCI6Imh0dHA6Ly9yZXMuY2xvdWRpbmFyeS5jb20vdG9kb29yYXBwL2ltYWdlL3VwbG9hZC92MTUwNTgwNTEwNi9ub3VuXzE3MjM3X2Fnd3FndC5wbmciLCJjdXJyVHJpcElkIjpudWxsLCJjdXJyVHJpcFN0YXRlIjpudWxsLCJ1c2VyVHlwZSI6ImFkbWluIiwibG9naW5TdGF0dXMiOnRydWUsIm1vYmlsZVZlcmlmaWVkIjpmYWxzZSwiZW1haWxWZXJpZmllZCI6ZmFsc2UsIm90cCI6NTYwNjU0LCJpc0FwcHJvdmVkIjp0cnVlLCJob21lQWRkcmVzcyI6bnVsbCwid29ya0FkZHJlc3MiOm51bGwsInZlcmlmaWVkIjpmYWxzZSwiand0QWNjZXNzVG9rZW4iOm51bGwsInVzZXJDYXJkSWQiOm51bGwsImluc3VyYW5jZVVybCI6bnVsbCwiYmlrZVBhcGVyVXJsIjpudWxsLCJyY0Jvb2tVcmwiOm51bGwsImxpY2VuY2VVcmwiOm51bGwsImNhcmREZXRhaWxzIjpbXSwibWFwQ29vcmRpbmF0ZXMiOlswLDBdLCJkZXZpY2VJZCI6bnVsbCwicHVzaFRva2VuIjpudWxsLCJjb21wYW55SWQiOm51bGwsIl9fdiI6MSwiY29tcGFueU5hbWUiOm51bGwsImlzQXZhaWxhYmxlIjp0cnVlLCJjcmVhdGVkX2F0IjoiMjAyMi0xMi0wMlQxMjo0NToyNC44MTBaIiwiaWF0IjoxNjcxNTY0ODkzfQ.F_TNvU-ZUpt6DvEwDiGSNPcyR_2wwAhs3zYTYXyfUaw`\r\n  //  );\r\n\r\n  // let socket = socketio(\r\n  //   SOCKET_URL,\r\n\r\n  //   { query: { token } }\r\n  // );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      ridersUnderCompanyR();\r\n      // const deleteRider = async () => {\r\n      // const res = await get({\r\n      //   endpoint: `api/super-admin/getAllRiders`,\r\n      //   //  body: { ...payload },\r\n      //   auth: true,\r\n      // });\r\n      // console.log(res);\r\n      //  setAllBikez(res.data.data);\r\n      // getCenter();\r\n    };\r\n    ridersUnderCompanyK();\r\n\r\n    const intervalId = setInterval(fetchData, 3000);\r\n    return () => clearInterval(intervalId);\r\n  }, [map]);\r\n\r\n  // const getCenter = () => {\r\n  //   if (count < 1) {\r\n  //     center = {\r\n  //       lat: allRiders[0]?.gpsLoc[1],\r\n  //       lng: allRiders[0]?.gpsLoc[0],\r\n  //     };\r\n  //   }\r\n  // };\r\n\r\n  const history = useNavigate();\r\n\r\n  // useEffect(() => {\r\n  //   socket.current.on(\"connect\", () => {\r\n  //     //  setIsConnected(true);\r\n  //     alert(\"hi\");\r\n  //     console.log(\"socket is connected\");\r\n  //   });\r\n\r\n  //   // socket.on(\"disconnect\", () => {\r\n  //   //   console.log(\"socket is disconnected\");\r\n  //   //   //  setIsConnected(false);\r\n  //   // });\r\n  // }, []);\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const toEmit = () => {\r\n    let payload = {\r\n      user: {\r\n        _id: useAuthUser._id,\r\n      },\r\n    };\r\n\r\n    //  socket.emit(\"adminMapSocket\", payload);\r\n  };\r\n\r\n  function createData(\r\n    destination,\r\n    rider,\r\n    orderId,\r\n    status,\r\n    fee,\r\n    departureDate,\r\n    arrivalDate,\r\n    timeDelay\r\n  ) {\r\n    return {\r\n      destination,\r\n      rider,\r\n      orderId,\r\n      status,\r\n      fee,\r\n      departureDate,\r\n      arrivalDate,\r\n      timeDelay,\r\n    };\r\n  }\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    // id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyAOcmuq7zgq9R_ZubLHlhw6VO_XRidO1Vg\",\r\n    // libraries: [\"places\"],\r\n  });\r\n  //   const {isLoaded} = useJsApiLoader({\r\n  //     googleMapsApiKey:'AIzaSyB6dttqGcdoqUQYT4rt4ZEd9_UOwP4GoMc',\r\n  //   })\r\n\r\n  if (!isLoaded) {\r\n    return <p>isloaded</p>;\r\n  }\r\n\r\n  const calculateRoute = async (origin, destination) => {\r\n    if (origin == \"\" || destination == \"\") {\r\n      return;\r\n    }\r\n    //eslint-disable-next-line no-undef\r\n    const directionService = new google.maps.DirectionsService();\r\n    const result = await directionService.route({\r\n      origin: origin,\r\n      destination: destination,\r\n      //eslint-disable-next-line no-undef\r\n      travelMode: google.maps.TravelMode.DRIVING,\r\n    });\r\n    setDirectionResponse(result);\r\n    setDistance(result.routes[0].legs[0].distance.text);\r\n    setDuration(result.routes[0].legs[0].duration.text);\r\n  };\r\n\r\n  //eslint-disable-next-line no-undef\r\n\r\n  const labelStyle = {\r\n    // text: \"Bike\",\r\n    color: \"blue\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"bold\",\r\n    anchor: new window.google.maps.Point(0, 20),\r\n  };\r\n\r\n  const centers = [\r\n    {\r\n      lat: 6.59651,\r\n      lng: 3.34205,\r\n    },\r\n    {\r\n      lat: 7.376736,\r\n      lng: 3.939786,\r\n    },\r\n    {\r\n      lat: 37.832,\r\n      lng: 7.42947,\r\n    },\r\n  ];\r\n\r\n  const bikeIcon = {\r\n    // url: \"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\",\r\n\r\n    // url:'https://maps.google.com/mapfiles/kml/shapes/bike.png',\r\n    // url:'https://www.nicepng.com/png/detail/365-3652928_directions-bike-comments-google-maps-bike-icon.png',\r\n    // url: \"https://th.bing.com/th/id/OIP.8JlkdXud5SNpohxO8I8n9AHaHa?pid=ImgDet&w=512&h=512&rs=1\",\r\n    // url:'https://toppng.com/public/uploads/preview/motorcycle-sports-bike-icon-115629692461s5jwedks2.png',\r\n    url: markerImage,\r\n    scaledSize: new window.google.maps.Size(60, 60),\r\n  };\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: \"45vw\",\r\n  };\r\n  return isLoaded ? (\r\n    <div className=\"w-full\">\r\n      {/* <ToDoorSearch /> */}\r\n      {/* <Autocomplete>\r\n            <input/>\r\n        </Autocomplete> */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"mb-4\">\r\n          {/* <Button onClick={toEmit}>Emit</Button> */}\r\n          {/* <Button onClick={() => map.panTo(center)} className=\" ml-3 px-7 py-2\">\r\n            Heat Map\r\n          </Button> */}\r\n          <Button\r\n            onClick={() => calculateRoute(\"Apapa, Lagos\", \"Ikeja, Lagos\")}\r\n            style={{ color: \"#8C8C8C\" }}\r\n            className=\" ml-3 px-7 py-2 bg-transparent\"\r\n          >\r\n            God's View\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"flex-between w-2/5 mr-12\">\r\n          <div className=\" flex items-center\">\r\n            <BsCircleFill\r\n              className=\"mr-1\"\r\n              style={{ color: \"#078532\" }}\r\n              fontSize={12}\r\n            />\r\n\r\n            <p>Online {allRiders?.map((e) => e.isAvailable)?.length}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={50}\r\n        options={{\r\n          zoomControl: false,\r\n          streetViewControl: false,\r\n          mapTypeControl: false,\r\n          fullscreenControl: false,\r\n        }}\r\n        onLoad={(map) => {\r\n          \r\n          setTimeout(() => {setMap(map)});\r\n        }}\r\n      >\r\n        {map && (\r\n          <div>\r\n            {allRiders.map(\r\n              (e) =>\r\n                e?.gpsLoc && (\r\n                  <div>\r\n                    {e?.isAvailable && (\r\n                      <div>\r\n                        <Marker\r\n                          style={{ width: \"10px\" }}\r\n                          onClick={() => {\r\n                            getLocationData(e);\r\n                          }}\r\n                          icon={bikeIcon}\r\n                          position={{ lat: e?.gpsLoc[1], lng: e?.gpsLoc[0] }}\r\n                          label={{\r\n                            text: e?.fname,\r\n                            ...labelStyle,\r\n                            marginTop: \"-250px\", // adjust this value to move the label up/down\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )\r\n            )}\r\n          </div>\r\n        )}\r\n        {directionResponse && (\r\n          <DirectionsRenderer directions={directionResponse} />\r\n        )}\r\n        {/* Child components, such as markers, info windows, etc. */}\r\n        <></>\r\n      </GoogleMap>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default Trips;\r\n"],"names":["props","useState","map","setMap","setDistance","lat","lng","center","allRiders","setAllRiders","setDuration","directionResponse","setDirectionResponse","useRef","ridersUnderCompanyR","localStorage","getItem","slice","companyId","get","endpoint","auth","res","data","length","ridersUnderCompanyK","console","log","getLocationData","e","gpsLoc","bounds","window","google","maps","LatLngBounds","extend","LatLng","fitBounds","panTo","useEffect","fetchData","intervalId","setInterval","clearInterval","useNavigate","isLoaded","useJsApiLoader","googleMapsApiKey","calculateRoute","origin","destination","directionService","DirectionsService","route","travelMode","TravelMode","DRIVING","result","routes","legs","distance","text","duration","labelStyle","color","fontSize","fontWeight","anchor","Point","bikeIcon","url","markerImage","scaledSize","Size","className","Button","onClick","style","isAvailable","mapContainerStyle","width","height","zoom","options","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","onLoad","setTimeout","icon","position","label","fname","marginTop","directions"],"sourceRoot":""}