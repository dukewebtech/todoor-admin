{"version":3,"file":"static/js/376.08b628a3.chunk.js","mappings":"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","sources":["common/NewWallCards.js","features/manageCompanies/ManageCompanies.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from \"images/Rectangle 7.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction NewWallCards(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      className={\"p-20\"}\r\n      style={{\r\n        border: \"none\",\r\n        borderLeft: props.cutborder ? \"1px solid #C4C4C4\" : \"none\",\r\n      }}\r\n    >\r\n      <div\r\n        className={\r\n          props.rider\r\n            ? \"riders-bg text-white text-center mr-3\"\r\n            : props.plain\r\n            ? \"plain-bg\"\r\n            : props.green\r\n            ? \"bg-primary-main text-white\"\r\n            : props.big\r\n            ? \"text-left\"\r\n            : \" text-white text-center\"\r\n        }\r\n        sx={{\r\n          minWidth: props.big ? 220 : 155,\r\n          minHeight: props.big ? 160 : 120,\r\n        }}\r\n      >\r\n        <div className={props.bigspace ? \" pr-10\" : \"px-5\"}>\r\n          <div>\r\n            <Typography\r\n              className={\r\n                props.plain || props.green\r\n                  ? \" text-center text-white\"\r\n                  : props.dashboard\r\n                  ? \"text-center text-primary-main \"\r\n                  : \"text-center text-primary-main font-bold\"\r\n              }\r\n              sx={{ fontSize: 12 }}\r\n            >\r\n              {props.name || \"Total Companies\"}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              variant={props.small ? \"h4\" : \"h2\"}\r\n              className={\r\n                props.green\r\n                  ? \"text-white text-center font-bold\"\r\n                  : \"text-center font-bold text-primary-main\"\r\n              }\r\n            >\r\n              {(props.name == 'Earnings'? `₦ ${props.count}` : props.count) || '0'}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <Button size=\"small\">Learn More</Button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewWallCards;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport pdf from \"images/pdf.png\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport { post, get, put } from \"services/fetch\";\r\n\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Autocomplete,\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Input,\r\n  MenuItem,\r\n  Modal,\r\n  Rating,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport ManageCompanyCard from \"./ManageCompanyCard\";\r\nimport { RiArrowLeftSLine } from \"react-icons/ri\";\r\nimport ManageCompaniesTable from \"./ManageCompaniesTable\";\r\nimport NewWallCards from \"common/NewWallCards\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nfunction ManageCompanies(props) {\r\n  const getCompanyStatisticsQueryResult = UserApi.useGetCompanyStatisticsQuery(\r\n    {}\r\n  );\r\n  const companyStatistics = getCompanyStatisticsQueryResult?.data;\r\n  // const dispatch = useDispatch\r\n  const [show, setShow] = useState(false);\r\n  const [userType, setUserType] = useState(\"company\");\r\n  const [mappingVal, setMappingVal] = useState([]);\r\n  const [mappingValCompany, setMappingValCompany] = useState([]);\r\n  const [companyRiders, setCompanyRiders] = useState([]);\r\n  const [tempCompanyRiders, setTempCompanyRiders] = useState([]);\r\n  const [companyEarns, setCompanyEarns] = useState([]);\r\n  const [companyNames, setCompanyName] = useState(\"\");\r\n  const [companyImage, setCompanyImage] = useState(\"\");\r\n  const [user, setUser] = useState();\r\n  const [count, setcount] = useState(0);\r\n  const [opens, setOpens] = React.useState(false);\r\n  const [pageNo, setPageNo] = useState(1);\r\n\r\n  const handleShow = (verified) => {\r\n    // if (verified) {\r\n    //   setShow(!show);\r\n    // } else {\r\n    //   setOpens(true);\r\n    // }\r\n    setOpens(true);\r\n    // console.log(\"jo(truehn\");\r\n  };\r\n  const history = useNavigate();\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"50%\",\r\n    minHeight: \"520px\",\r\n    bgcolor: \"background.paper\",\r\n    borderRadius: \"3%\",\r\n    // border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const onPageChange = (page) => {\r\n    setPageNo(page);\r\n\r\n    console.log(page);\r\n  };\r\n\r\n  //   const ridersUnderCompany = async (userId) => {\r\n  //     const res = await get({\r\n  //       endpoint: `api/super-admin/company/getalluser?userType=company\r\n  // `,\r\n  //       //  body: { ...payload },\r\n  //       auth: true,\r\n  //     });\r\n  //     console.log(userId);\r\n  //   };\r\n\r\n  const top100Films = [\r\n    { label: \"Edo State\", year: 1994 },\r\n    { label: \"Oredo\", year: 1972 },\r\n  ];\r\n\r\n  const tabloid = tempCompanyRiders?.map((e) => ({\r\n    image: e?.profileUrl,\r\n    name: e?.fname,\r\n    company: e?.companyName,\r\n    id: e?.email,\r\n    ratings: moment(e.created_at).format(\"ll\"),\r\n    tripsCompleted: \"-\",\r\n    phoneNo: e?.phoneNo,\r\n    status: e?.currTripState,\r\n    verified: e?.verified,\r\n    info: e,\r\n  }));\r\n\r\n  const tableArray = [\r\n    {\r\n      image: gigLogo,\r\n      name: \"Nickky Samuel jonas  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n    },\r\n\r\n    {\r\n      image: gigLogo,\r\n      name: \"John jimmy Samuel  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n    },\r\n  ];\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n  // {{BASE_URL}}/api/company/getBothVerifiedUnverifiedUsers?userType=rider&verified=false\r\n\r\n  const getAllCompanyQueryResult = UserApi.useGetAllQuery({\r\n    userType: \"company\",\r\n    count: count,\r\n    pageNo,\r\n  });\r\n  const totalCompanies = getAllCompanyQueryResult?.data?.data;\r\n\r\n  const getAllCompanyResults = UserApi.useGetAllQuery({userType: \"company\"});\r\n  const Companies = getAllCompanyResults?.data?.data;\r\n\r\n  const getAllUnVerifiedQueryResult = UserApi.useGetAllVerifiedQuery({\r\n    userType,\r\n    verified: false,\r\n    pageNo,\r\n  });\r\n  const getAllVerifiedQueryResult = UserApi.useGetAllVerifiedQuery({\r\n    userType,\r\n    verified: true,\r\n    pageNo,\r\n  });\r\n  const totalVerifiedUsers = getAllVerifiedQueryResult?.data?.data;\r\n  const totalUnverifiedUsers = getAllUnVerifiedQueryResult?.data?.data;\r\n  console.log(totalVerifiedUsers);\r\n\r\n  const totalPages = +getAllCompanyQueryResult?.data?.meta?.totalNoOfPages;\r\n\r\n  console.log(totalPages);\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  // let mappingVal = totalCompanies;\r\n\r\n  const functionHook = () => {\r\n    //  dispatch(UserApi.useLoginMutation());\r\n  };\r\n\r\n  const ridersUnderCompany = async (companyId) => {\r\n    const res = await get({\r\n      endpoint: `api/super-admin/getAllRidersCompany?userId=${companyId}`,\r\n      //  body: { ...payload },\r\n      auth: true,\r\n    });\r\n    console.log(res.data.data);\r\n    setCompanyRiders(res.data.data);\r\n    setTempCompanyRiders(res.data.data);\r\n  };\r\n\r\n  const ridersUnderCompanyR = async (companyId) => {\r\n    const res = await get({\r\n      endpoint: `api/super-admin/getAllRidersCompany?userId=${companyId}`,\r\n      //  body: { ...payload },\r\n      auth: true,\r\n    });\r\n    console.log(res?.data?.data);\r\n    return res?.data?.data?.length;\r\n  };\r\n  function numberWithCommas(x) {\r\n    // serPrice.value = x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    //  formState.target_amount=cleanupNumber(serPrice.value)\r\n    return x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n  const companyEarnings = async (companyId) => {\r\n    const res = await get({\r\n      endpoint: `api/super-admin/companyTotalEarningStats?userId=${companyId}`,\r\n      //  body: { ...payload },\r\n      auth: true,\r\n    });\r\n    setCompanyEarns(res?.data?.data[0]?.total_revenue || 0);\r\n    // setCompanyEarns(res.data.data);\r\n  };\r\n\r\n  const filterRidersTable = (val) => {\r\n    // console.log(\"Samson\"?.includes(val));\r\n    // console.log(companyRiders);\r\n    console.log(val);\r\n    let temp = companyRiders?.filter((e) =>\r\n      e?.fname.toLowerCase()?.includes(val?.toLowerCase())\r\n    );\r\n    setTempCompanyRiders(temp);\r\n  };\r\n\r\n  const newDisplay = async (status, companyId) => {\r\n    const res = status\r\n      ? await put({\r\n          endpoint: `api/super-admin/approveUser?id=${companyId}`,\r\n          //  body: { ...payload },\r\n          auth: true,\r\n        })\r\n      : await put({\r\n          endpoint: `api/super-admin/rejectUser?id=${companyId}`,\r\n          //  body: { ...payload },\r\n          auth: true,\r\n        });\r\n\r\n    if (res.data.success) {\r\n      setcount(count + 1);\r\n      enqueueSnackbar(res?.data?.message, { variant: \"succes\" });\r\n    } else {\r\n      console.log(res);\r\n      enqueueSnackbar(res?.data?.message, { variant: \"error\" });\r\n    }\r\n  };\r\n  const approveDecline = async (status, companyId) => {\r\n    const res = status\r\n      ? await put({\r\n          endpoint: `api/super-admin/approveUser?id=${companyId}`,\r\n          //  body: { ...payload },\r\n          auth: true,\r\n        })\r\n      : await put({\r\n          endpoint: `api/super-admin/rejectUser?id=${companyId}`,\r\n          //  body: { ...payload },\r\n          auth: true,\r\n        });\r\n\r\n    if (res.data.success) {\r\n      setcount(count + 1);\r\n      enqueueSnackbar(res?.data?.message, { variant: \"succes\" });\r\n    } else {\r\n      console.log(res);\r\n      enqueueSnackbar(res?.data?.message, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  const newsDisplay = (val, bol) => {\r\n    // console.log(\"Samson\"?.includes(val));\r\n    // console.log(companyRiders);\r\n    console.log(val);\r\n    if (bol) setMappingVal(val);\r\n    else {\r\n      setMappingVal([]);\r\n    }\r\n  };\r\n\r\n  const handleEvent = (data) => {\r\n    ridersUnderCompany(data?._id);\r\n    companyEarnings(data?._id);\r\n    setCompanyName(data?.fname);\r\n    setCompanyImage(data?.profileUrl);\r\n    setUser(data);\r\n\r\n    handleShow();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToDoorSearch records={Companies} selectOption={handleEvent} />\r\n\r\n      {!show && (\r\n        <div className=\"\">\r\n          <div class=\"w-3/5 mb-8\">\r\n            <div className=\"flex items-center  mt-8 border2 p-2\">\r\n              <div\r\n                className=\"hover:cursor-pointer\"\r\n                onClick={() => {\r\n                  newsDisplay(totalVerifiedUsers, true);\r\n                }}\r\n              >\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  small={true}\r\n                  bigspace={true}\r\n                  name=\"Verified Companies\"\r\n                  count={companyStatistics?.verified_company}\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"hover:cursor-pointer\"\r\n                onClick={() => {\r\n                  newsDisplay(totalUnverifiedUsers, true);\r\n                }}\r\n              >\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  small={true}\r\n                  cutborder={true}\r\n                  name=\"Unverified Companies\"\r\n                  count={numberWithCommas(\r\n                    companyStatistics?.unverified_company\r\n                  )}\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"hover:cursor-pointer\"\r\n                onClick={() => {\r\n                  newsDisplay(totalCompanies, false);\r\n                }}\r\n              >\r\n                <NewWallCards\r\n                  dashboard={true}\r\n                  small={true}\r\n                  cutborder={true}\r\n                  name=\"Total Companies\"\r\n                  count={numberWithCommas(companyStatistics?.total_company)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex mb-5 h-3 justify-center mt-5 \">\r\n            <ul className=\"flex\">\r\n              {pageNo > 1 && (\r\n                <li>\r\n                  <a\r\n                    href=\"#\"\r\n                    onClick={() => onPageChange(pageNo - 1)}\r\n                    className=\"py-2 px-4 bg-gray-400 text-white font-bold rounded-l hover:bg-gray-600\"\r\n                  >\r\n                    Prev\r\n                  </a>\r\n                </li>\r\n              )}\r\n              {pageNumbers.map((number) => (\r\n                <li key={number}>\r\n                  <a\r\n                    href=\"#\"\r\n                    onClick={() => onPageChange(number)}\r\n                    className={\r\n                      pageNo === number\r\n                        ? \"py-2 px-4 bg-primary-main text-white font-bold\"\r\n                        : \"py-2 px-4 hover:bg-gray-400/10\"\r\n                    }\r\n                  >\r\n                    {number}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n              {pageNo < pageNumbers.length && (\r\n                <li>\r\n                  <a\r\n                    href=\"#\"\r\n                    onClick={() => onPageChange(pageNo + 1)}\r\n                    className=\"py-2 px-4 bg-gray-400 text-white font-bold rounded-r hover:bg-gray-600\"\r\n                  >\r\n                    Next\r\n                  </a>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div class=\"flex flex-wrap gap-4\">\r\n            {(\r\n              (mappingVal.length && mappingVal) ||\r\n              // (mappingValCompany.length && mappingValCompany) ||\r\n              totalCompanies\r\n            )?.map((e) => (\r\n              <div\r\n                onClick={() => {\r\n                  ridersUnderCompany(e?._id);\r\n                  companyEarnings(e?._id);\r\n                  setCompanyName(e?.fname);\r\n                  setCompanyImage(e?.profileUrl);\r\n                  setUser(e);\r\n                }}\r\n                className=\"w-[32%] mt-3\"\r\n              >\r\n                <ManageCompanyCard companyDetails={e} handleShow={handleShow} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {show && (\r\n        <div>\r\n          <div\r\n            onClick={() => setShow(!show)}\r\n            className=\"flex items-center mb-8 cursor-pointer w-16 p-2\"\r\n          >\r\n            <div\r\n              style={{ border: \"1px solid #494949\" }}\r\n              className=\"border-solid w-5 mr-2 rounded h-5 flex justify-center items-center\"\r\n            >\r\n              <RiArrowLeftSLine\r\n                className=\"\"\r\n                style={{ fontSize: \"22px\", color: \"#494949\" }}\r\n              />\r\n            </div>\r\n            <p style={{ color: \"#494949\" }} className=\"text-base\">\r\n              Back\r\n            </p>\r\n          </div>\r\n\r\n          <div\r\n            className=\"flex items-center\"\r\n            style={{ backGroundColor: \"#1E1E1E\" }}\r\n          >\r\n            <Avatar src={companyImage} className=\"rounded-full\" />\r\n            <Typography variant=\"h5\" className=\"font-bold ml-4 \">\r\n              {companyNames}\r\n            </Typography>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <div className=\"flex items-center  mt-8 border2 p-2\">\r\n              <NewWallCards\r\n                dashboard={true}\r\n                small={true}\r\n                bigspace={true}\r\n                name=\"Riders\"\r\n                count={companyRiders?.length}\r\n              />\r\n\r\n              <NewWallCards\r\n                dashboard={true}\r\n                small={true}\r\n                cutborder={true}\r\n                name=\"Earnings\"\r\n                count={numberWithCommas(companyEarns)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex  justify-between  items-end\">\r\n            <Typography\r\n              variant=\"h5\"\r\n              className=\"font-bold mt-8 text-primary-main\"\r\n              // text-blue-800\r\n            >\r\n              Riders\r\n            </Typography>\r\n\r\n            <div className=\"flex justify-between items-end\">\r\n              <TextField\r\n                onChange={(e, value) => filterRidersTable(e.target.value)}\r\n              />\r\n              {/* <Autocomplete\r\n                className=\"mr-3\"\r\n                id=\"combo-box-demo\"\r\n                options={top100Films}\r\n                sx={{ width: 200 }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={top100Films}\r\n                sx={{ width: 200 }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              /> */}\r\n            </div>\r\n          </div>\r\n\r\n          {tabloid?.map((e) => (\r\n            <ManageCompaniesTable tableArray={e} info={e?.info} />\r\n          ))}\r\n\r\n          {tabloid.length < 1 && (\r\n            <Typography\r\n              variant=\"h4\"\r\n              className=\"font-bold my-16 text-primary-main w-full text-center\"\r\n            >\r\n              This company is yet to add a Rider\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <Modal\r\n        // open={true}\r\n        open={opens}\r\n        onClose={() => setOpens(false)}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <div>\r\n          <Box sx={style}>\r\n            <div>\r\n              <div className=\"flex gap-8\">\r\n                <div className=\"flex\">\r\n                  <Avatar\r\n                    sx={{ width: 100, height: 100 }}\r\n                    src={user?.profileUrl}\r\n                  />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <Typography className=\"font-bold mb-5\" variant=\"h5\">\r\n                    {user?.fname}\r\n                  </Typography>\r\n                  {!user?.verified && (\r\n                    <div class=\"flex gap-5\">\r\n                      <Button\r\n                        onClick={() => approveDecline(true, user?._id)}\r\n                        className=\"bg-green-500\"\r\n                      >\r\n                        Approve\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => approveDecline(false, user?._id)}\r\n                        className=\"bg-red-500\"\r\n                      >\r\n                        Decline\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                  {user?.verified && (\r\n                    <div class=\"flex gap-5\">\r\n                      <Button\r\n                        onClick={() => {\r\n                          setShow(!show);\r\n                          setOpens(false);\r\n                        }}\r\n                        className=\"bg-black/30\"\r\n                      >\r\n                        View Company\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <Divider className=\"my-8\" />\r\n              {/* <div class=\"flex gap-20\">\r\n                <div className=\" gap-16 font-semibold\">\r\n                  <Typography className=\"my-3 font-semibold\">\r\n                    Total Earnings\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold text-primary-main\">\r\n                    {\" \"}\r\n                    XXXXXXX\r\n                  </Typography>\r\n                </div>\r\n                <div className=\" font-semibold\">\r\n                  <Typography className=\"my-3 font-semibold\">\r\n                    No Of Rides\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold text-primary-main\">\r\n                    XXXXX\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n              <Divider className=\"my-8\" /> */}\r\n              <div class=\"flex gap-16 \">\r\n                <div className=\"flex flex-col gap-3 font-semibold\">\r\n                  {/* <Typography className=\"font-semibold\">Company Name:</Typography> */}\r\n                  <Typography className=\"font-semibold\">Address:</Typography>\r\n                  <Typography className=\"font-semibold\">\r\n                    Phone Number:\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold\">\r\n                    Email address:\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold\">\r\n                    Country:\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold\">\r\n                    State:\r\n                  </Typography>\r\n                  <Typography className=\"font-semibold\">\r\n                    City:\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"flex flex-col gap-3\">\r\n                  {/* <Typography>{user?.companyName ?? 'Company Name is Empty'}</Typography> */}\r\n                  <Typography>{user?.address}</Typography>\r\n                  <Typography>{user?.phoneNo}</Typography>\r\n                  <Typography>{user?.email}</Typography>\r\n                  <Typography>{user?.country}</Typography>\r\n                  <Typography>{user?.state}</Typography>\r\n                  <Typography>{user?.city}</Typography>\r\n                  {/* <Typography>{user?.dob}</Typography> */}\r\n                </div>\r\n              </div>\r\n              <div class=\"flex flex-col gap-4 mt-4 w-1/2\">\r\n                <div className=\"grid grid-cols-2 gap-5 items-center\">\r\n                  <Typography className=\"font-semibold\">ID:</Typography>\r\n                  {!user?.idPhotoUrl ? (\r\n                    <div className=\"w-full flex flex-col justify-start items-start gap-5\">\r\n                      <Typography className=\"text-yellow-400\" variant=\"\">\r\n                        Not Yet Uploaded.\r\n                      </Typography>\r\n                    </div>\r\n                  ) : (\r\n                    <Button\r\n                      className=\"text-white italic bg-primary-main\"\r\n                      variant=\"\"\r\n                    >\r\n                      <a href={user?.idPhotoUrl} target=\"_blank\">\r\n                        {\" \"}\r\n                        View Id.\r\n                      </a>\r\n                    </Button>\r\n                  )}\r\n                  {/* {user?.idPhotoUrl?.endsWith(\".pdf\") ? (\r\n                    <a href={user?.idPhotoUrl} target=\"_blank\">\r\n                      <img className=\"w-full h-32  border-none\" src={pdf} />\r\n                    </a>\r\n                  ) : (\r\n                    <a href={user?.idPhotoUrl} target=\"_blank\">\r\n                      <img\r\n                        className=\"w-[300px] h-32  border-none\"\r\n                        src={user?.idPhotoUrl}\r\n                      />\r\n                    </a> \r\n                  )}*/}\r\n                </div>\r\n                <div className=\"grid grid-cols-2 gap-5 items-center\">\r\n                  <Typography className=\"font-semibold \">\r\n                    CAC Document:\r\n                  </Typography>\r\n                  {/* {user?.companyRegistrationPhotoUrl?.endsWith(\".pdf\") ? (\r\n                    <a href={user?.companyRegistrationPhotoUrl} target=\"_blank\">\r\n                      <img className=\"w-full h-32 border-none\" src={pdf} />\r\n                    </a>\r\n                  ) : (\r\n                    <a href={user?.companyRegistrationPhotoUrl} target=\"_blank\">\r\n                      <img\r\n                        className=\"w-[300px] h-32  border-none\"\r\n                        src={user?.companyRegistrationPhotoUrl}\r\n                      />\r\n                    </a>\r\n                  )} */}\r\n                  {!user?.companyRegistrationPhotoUrl ? (\r\n                    <div className=\"w-full flex flex-col justify-start items-start gap-5\">\r\n                      <Typography className=\"text-yellow-400\" variant=\"\">\r\n                        Not Yet Uploaded.\r\n                      </Typography>\r\n                    </div>\r\n                  ) : (\r\n                    <Button\r\n                      className=\"text-white italic bg-primary-main minw-\"\r\n                      variant=\"\"\r\n                    >\r\n                      <a\r\n                        href={user?.companyRegistrationPhotoUrl}\r\n                        target=\"_blank\"\r\n                      >\r\n                        View CAC\r\n                      </a>\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageCompanies;\r\n"],"names":["props","React","history","useNavigate","enqueueSnackbar","useAuthUser","useSnackbar","UserApi","loginMuation","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","console","log","data","unwrap","variant","message","className","style","border","borderLeft","cutborder","rider","plain","green","big","sx","minWidth","minHeight","bigspace","dashboard","fontSize","name","small","count","getCompanyStatisticsQueryResult","companyStatistics","useState","show","setShow","userType","mappingVal","setMappingVal","companyRiders","setCompanyRiders","tempCompanyRiders","setTempCompanyRiders","companyEarns","setCompanyEarns","companyNames","setCompanyName","companyImage","setCompanyImage","user","setUser","setcount","opens","setOpens","pageNo","setPageNo","handleShow","verified","onPageChange","page","tabloid","map","e","image","profileUrl","fname","company","companyName","id","email","ratings","moment","created_at","format","tripsCompleted","phoneNo","status","currTripState","info","getAllCompanyQueryResult","totalCompanies","getAllCompanyResults","Companies","getAllUnVerifiedQueryResult","getAllVerifiedQueryResult","totalVerifiedUsers","totalUnverifiedUsers","totalPages","meta","totalNoOfPages","pageNumbers","i","push","ridersUnderCompany","companyId","get","endpoint","auth","res","numberWithCommas","x","toString","replace","companyEarnings","total_revenue","approveDecline","put","success","newsDisplay","val","bol","records","selectOption","_id","class","onClick","verified_company","unverified_company","total_company","href","number","length","companyDetails","color","backGroundColor","src","onChange","value","temp","filter","toLowerCase","includes","filterRidersTable","target","tableArray","open","onClose","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","p","height","address","country","state","city","idPhotoUrl","companyRegistrationPhotoUrl"],"sourceRoot":""}