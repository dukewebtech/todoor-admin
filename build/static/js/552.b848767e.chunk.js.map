{"version":3,"file":"static/js/552.b848767e.chunk.js","mappings":"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","sources":["common/PasswordTextField.js","common/ToDoorSearch.js","common/WallCards.js","services/endpoints.js","services/fetch.js"],"sourcesContent":["import React from \"react\";\r\nimport { IconButton, InputAdornment, TextField, Icon } from \"@mui/material\";\r\nimport clsx from \"clsx\";\r\n\r\n/** @param {import(\"@mui/material\").TextFieldProps} props */\r\nfunction PasswordTextField(props) {\r\n  const { error, ...rest } = props;\r\n  const [isVisible, setVisible] = React.useState(false);\r\n  const handleVisible = React.useCallback(() => setVisible((p) => !p), []);\r\n\r\n  return (\r\n    <TextField\r\n      type={isVisible ? \"text\" : \"password\"}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleVisible}\r\n              disabled={props.disabled}\r\n            >\r\n              <Icon className={clsx(error ? \"text-danger\" : \"text-primary\")}>\r\n                {isVisible ? \"visibility_off\" : \"visibility\"}\r\n              </Icon>\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      error={error}\r\n      {...rest}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PasswordTextField;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport { MdRefresh, MdOutlineSearch, MdSearch } from \"react-icons/md\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from \"images/Rectangle 7.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Input,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport { AccountCircle } from \"@mui/icons-material\";\r\n\r\nfunction ToDoorSearch(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {/* <span className=\"text-xs mr-1 opacity-50\">\r\n          <MdRefresh />\r\n        </span> */}\r\n      <TextField\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <MdOutlineSearch />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        variant=\"outlined\"\r\n        style={{ backgroundColor: \"#EBEBEB\", border: \"none\" }}\r\n        className=\"w-[30%] mb-5 text-ssm\"\r\n        placeholder=\"Search Company \"\r\n      />\r\n      <Divider className=\"mb-8\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoorSearch;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\nimport background from \"images/background.png\";\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport snake from \"images/Mask group.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction WallCards(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <Card\r\n        className={\r\n          props.rider\r\n            ? \"riders-bg text-white text-center mr-3\"\r\n            : props.plain\r\n            ? \"plain-bg\"\r\n            : props.green\r\n            ? \"bg-primary-main text-white\"\r\n            : props.big\r\n            ? \"text-left border \"\r\n            : \" text-white text-center\"\r\n        }\r\n        sx={{\r\n          minWidth: 155,\r\n          minHeight: !props.short && 120,\r\n          maxHeight: props.short && 105,\r\n        }}\r\n        // sx={{\r\n        //   minWidth: props.big ? 220 : 155,\r\n        //   minHeight: props.big ? 160 : 120,\r\n        // }}\r\n      >\r\n        {/* <img\r\n          className=\"absolute z-0 top-0 left-0 w-[100%] h-[100%]\"\r\n          src={snake}\r\n        /> */}\r\n        <CardContent className={props.big ? \"pr-24\" : \"\"}>\r\n          <div>\r\n            <Typography\r\n              className={\r\n                props.plain || props.green\r\n                  ? \" text-center text-white z-10\"\r\n                  : props.dashboard\r\n                  ? \"text-center text-secondary-light z-10\"\r\n                  : \"text-center text-primary-main font-bold z-10\"\r\n              }\r\n              style={{ fontSize: 12, zIndex: 100 }}\r\n            >\r\n              {props.name || \"Total Companies\"}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              variant={props.small ? \"h4\" : \"h2\"}\r\n              className={\r\n                props.green\r\n                  ? \"text-white text-center font-bold z-10\"\r\n                  : props.short\r\n                  ? \"text-center font-bold text-primary-main mb-3 z-10\"\r\n                  : props.small\r\n                  ? \"text-center font-bold text-primary-main mt-4\"\r\n                  : \"text-center font-bold text-primary-main z-10 \"\r\n              }\r\n            >\r\n              {props.name == \"Earnings\"\r\n                ? props.count&&`₦ ${props.count} `\r\n                : props.count}\r\n            </Typography>\r\n          </div>\r\n        </CardContent>\r\n\r\n        {/* <Button size=\"small\">Learn More</Button> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WallCards;\r\n","/* eslint-disable */\r\n\r\nconst paths = {\r\n  // login: \"payrollapi/api/Auth\",\r\n  login: \"login\",\r\n  dashboardStats: \"payrollapi/dashboardstats\",\r\n\r\n\r\n  postPassword2: \"services/api/resetpassword/resetpassword\",\r\n  notification: \"services/api/notifications\",\r\n  employeeProfile: \"global/api/employee/profile\",\r\n};\r\n\r\nexport default paths;\r\n","/* eslint-disable */\r\n\r\nimport axios from \"axios\";\r\nimport paths from \"./endpoints\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n// import { decodeToken, logout } from \"../utility/auth\";\r\n\r\nconst getToken = () => {\r\n  // const t = decodeToken(\"t\");\r\n  // const token = t && t.t;\r\n  const token = (localStorage.getItem(\"token\"));\r\n\r\n  // localStorage.getItem(\"token\");\r\n  return token;\r\n};\r\n\r\nconst fetchBackend = async (\r\n  endpoint,\r\n  method,\r\n  auth,\r\n  body,\r\n  pQuery,\r\n  param,\r\n  multipart\r\n) => {\r\n  const headers = {\r\n    // \"X-API-KEY\": \"fq05322d-429b-4f77-8a4p-a97ry62eb37k\",\r\n    // \"X-API-KEY\": process.env.REACT_APP_API_KEY,\r\n    \"Content-Type\": \"application/json; charset=utf-8\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    // \"Access-Control-Allow-Methods\": \"POST\",\r\n   \"Access-Control-Allow-Methods\" : \"POST GET OPTIONS\",\r\n  };\r\n  const path = paths[endpoint] || endpoint;\r\n  let url = `${process.env.REACT_APP_SOFTWORK_API}/${path}`;\r\n  // let url = `${process.env.REACT_APP_BACKEND_URL}${path}`;\r\n\r\n  if (param) {\r\n    url += `/${param}`;\r\n  }\r\n\r\n  if (pQuery) {\r\n    const paramsArray = Object.keys(pQuery).map(\r\n      (key) =>\r\n        pQuery[key] &&\r\n        `${encodeURIComponent(key)}=${encodeURIComponent(pQuery[key])}`\r\n    );\r\n\r\n    url += `?${paramsArray.join(\"&\")}`;\r\n  }\r\n\r\n  if (auth) {\r\n    const token = getToken();\r\n    if (token) {\r\n      headers.Authorization = `${token}`;\r\n    }\r\n  }\r\n  const options = {\r\n    url,\r\n    method,\r\n    headers,\r\n  };\r\n\r\n  if (body) {\r\n    options.data = body;\r\n  }\r\n\r\n  return axios(options).then(\r\n    (res) => res,\r\n    async (err) => {\r\n      if (err && err.response && err.response.status === 401) {\r\n        // log the user out and return\r\n        // await logout(\"/\", true);\r\n      }\r\n      return err.response;\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} pQuery\r\n * @param {string} param\r\n * @param {boolean} auth\r\n */\r\nexport const get = ({ endpoint, pQuery, param = null, auth = true }) =>\r\n  fetchBackend(endpoint, \"GET\", auth, null, pQuery, param);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const post = ({ endpoint, body, auth = true, multipart }) =>\r\n  fetchBackend(endpoint, \"POST\", auth, body, null, null, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\n\r\n export const put = ({ endpoint, body, auth = true, multipart }) =>\r\n fetchBackend(endpoint, \"PUT\", auth, body, null, null, multipart);\r\n\r\n/**\r\n*\r\n* @param {string} endpoint\r\n* @param {object} body\r\n* @param {string} param\r\n* @param {string} pQuery\r\n* @param {boolean} auth\r\n* @param {boolean} multipart\r\n*/\r\nexport const patch = ({\r\n  endpoint,\r\n  body,\r\n  param,\r\n  pQuery,\r\n  auth = true,\r\n  multipart,\r\n}) => fetchBackend(endpoint, \"PATCH\", auth, body, pQuery, param, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {object} body\r\n * @param {string} param\r\n * @param {string} pQuery\r\n * @param {boolean} auth\r\n * @param {boolean} multipart\r\n */\r\nexport const putPaginated = ({\r\n  endpoint,\r\n  body,\r\n  param,\r\n  pQuery,\r\n  auth = true,\r\n  multipart,\r\n}) => fetchBackend(endpoint, \"PATCH\", auth, body, pQuery, param, multipart);\r\n\r\n/**\r\n *\r\n * @param {string} endpoint\r\n * @param {string} param\r\n * @param {boolean} auth\r\n */\r\nexport const del = ({ endpoint, param, auth = true }) =>\r\n  fetchBackend(endpoint, \"DELETE\", auth, null, null, param);\r\n"],"names":["props","error","rest","React","isVisible","setVisible","handleVisible","p","type","InputProps","endAdornment","position","onClick","disabled","className","clsx","history","useNavigate","enqueueSnackbar","useAuthUser","useSnackbar","UserApi","loginMuation","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","console","log","data","unwrap","variant","message","style","backgroundColor","border","placeholder","rider","plain","green","big","sx","minWidth","minHeight","short","maxHeight","dashboard","fontSize","zIndex","name","small","count","login","dashboardStats","postPassword2","notification","employeeProfile","fetchBackend","endpoint","method","auth","body","pQuery","param","multipart","headers","path","paths","url","process","paramsArray","Object","keys","map","key","encodeURIComponent","join","token","localStorage","getItem","Authorization","options","axios","then","res","err","response","status","get","post","put","del"],"sourceRoot":""}