{"version":3,"file":"static/js/462.29a6967b.chunk.js","mappings":"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","sources":["common/LoginHeader.js","common/PasswordTextField.js","features/login/Login.js","utils/FormikUtils.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport toDoorLogo from 'images/ToDoorLogisticsLogo.png'\r\nimport trustedBy3 from '../images/Rectangle 78.png'\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Input, MenuItem, Select, TextField, Typography } from '@mui/material';\r\n\r\n\r\nconst LoginHeader = (prop) => {\r\n    const history = useNavigate();\r\n    const redirect = ()=>{\r\n//   localStorage.setItem('auth', null)\r\n      history('/');\r\n  }\r\n    return (\r\n      <div className=\"flex \">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex relative items-center\">\r\n            <img\r\n              src={toDoorLogo}\r\n              alt=\"softwork logo\"\r\n              className=\"cursor-pointer w-36\"\r\n              onClick={redirect}\r\n            />\r\n           \r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n}\r\nexport default LoginHeader;\r\n","import React from \"react\";\r\nimport { IconButton, InputAdornment, TextField, Icon } from \"@mui/material\";\r\nimport clsx from \"clsx\";\r\n\r\n/** @param {import(\"@mui/material\").TextFieldProps} props */\r\nfunction PasswordTextField(props) {\r\n  const { error, ...rest } = props;\r\n  const [isVisible, setVisible] = React.useState(false);\r\n  const handleVisible = React.useCallback(() => setVisible((p) => !p), []);\r\n\r\n  return (\r\n    <TextField\r\n      type={isVisible ? \"text\" : \"password\"}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"toggle password visibility\"\r\n              onClick={handleVisible}\r\n              disabled={props.disabled}\r\n            >\r\n              <Icon className={clsx(error ? \"text-danger\" : \"text-primary\")}>\r\n                {isVisible ? \"visibility_off\" : \"visibility\"}\r\n              </Icon>\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      error={error}\r\n      {...rest}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PasswordTextField;\r\n","import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\n\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport trustedBy2 from \"images/Rectangle 7.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/signup-client\");\r\n  };\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      // redirect()\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  return (\r\n    // <div>\r\n    //  {/* <Typography variant=\"h6\">Hi</Typography> */}\r\n    //   <form onSubmit={formik.handleSubmit}>\r\n    //     <TextField\r\n    //       label=\"Username\"\r\n    //       {...getTextFieldFormikProps(formik, \"username\")}\r\n    //     />\r\n    //     <PasswordTextField\r\n    //       label=\"Password\"\r\n    //       {...getTextFieldFormikProps(formik, \"password\")}\r\n    //     />\r\n    //     <Button type=\"submit\">Submit</Button>\r\n    //   </form>\r\n    // </div>\r\n    <div className=\" \">\r\n      <LoginHeader />\r\n      <div className=\"flex justify-between text-center\">\r\n        <div\r\n          className=\"p-100\"\r\n          style={{\r\n            paddingLeft: \"\",\r\n            paddingRight: \"\",\r\n            minWidth: \"40%\",\r\n            maxWidth: \"80%\",\r\n          }}\r\n        >\r\n          <div className=\"flex-vertical\">\r\n            <Typography variant=\"h3\" className=\"m-b-60\">\r\n              Welcome Back\r\n            </Typography>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <TextField\r\n                className=\"w-full\"\r\n                placeholder=\"Enter your username\"\r\n                // onChange={handleChange}\r\n                //     onChange={(e)=>{\r\n                //   alert('k')\r\n                //   // console.log(e)\r\n                //   // localStorage.setItem ('location', e.target.value)\r\n                // }}\r\n                name=\"username\"\r\n                {...getTextFieldFormikProps(formik, \"username\")}\r\n              />\r\n\r\n              <TextField\r\n                className=\"w-full my-10\"\r\n                placeholder=\"Enter your Password\"\r\n                // onChange={handleChange}\r\n                //     onChange={(e)=>{\r\n                //   alert('k')\r\n                //   // console.log(e)\r\n                //   // localStorage.setItem ('password', e.target.value)\r\n                // }}\r\n                name=\"password\"\r\n                {...getTextFieldFormikProps(formik, \"password\")}\r\n              />\r\n              {/* <Select\r\n          value={age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          // inputProps={{ 'aria-label': 'Without label' }}\r\n          name=\"Location\"\r\n          {...getTextFieldFormikProps(formik, \"location\")}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select> */}\r\n\r\n              {/* <Input placeholder='Location' className='m-b-20'/> */}\r\n              <div className=\"text-white m-b-30 mt-20  \">\r\n                <Button\r\n                  className=\"p-3 w-full\"\r\n                  type=\"submit\"\r\n                  color=\"tetiary\"\r\n                  // onClick={() => localStorage.setItem('type', 'CLIENT')}\r\n                  // className=' '\r\n                >\r\n                  Continue\r\n                </Button>\r\n              </div>\r\n              {/* <div className='login-bck w-100'><Button className='w-100' >Continue</Button></div> */}\r\n              {/* <div className=\"secondary w-100\"><Button type='submit'\r\n                className='m-b-60 w-100'\r\n                onClick={() => localStorage.setItem('type', 'FREELANCER')}\r\n              >\r\n                Sign up as a freelancer\r\n              </Button></div> */}\r\n              {/* <div className='login-bck w-100'><Button className='w-100' >Continue</Button></div> */}\r\n            </form>\r\n\r\n            <a href=\"\">\r\n              <h2 className=\"size-11 m-t-40\">\r\n                Already a Member? <b>Log In</b>\r\n              </h2>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"relative flex-align flex-center w-50\"\r\n          style={{\r\n            minHeight: \"100%\",\r\n            position: \"relative\",\r\n            backgroundColor: \"#F6F6F6\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"two-circles relative\"\r\n            style={{ position: \"relative\" }}\r\n          ></div>\r\n          <img\r\n            src={trustedBy3}\r\n            className=\"\"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"50%\",\r\n              height: \"49%\",\r\n              width: \"98.8%\",\r\n            }}\r\n          />\r\n          {/* <div className='' style={{width:'100px', height:'50px', ottomLeftRadius:'100%',ottomRightRadius:'100%', position:'absolute', bottom:'0px', opColor:'blue'}}></div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/**\r\n * \r\n * @param {*} formik \r\n * @param {*} key \r\n * @returns \r\n */\r\nexport function getTextFieldFormikProps(formik, key) {\r\n  return {\r\n    ...formik.getFieldProps(key),\r\n    error: !!formik.touched?.[key] && !!formik.errors?.[key],\r\n    helperText: !!formik.touched?.[key] && formik.errors?.[key],\r\n    focused: formik.values?.[key],\r\n  };\r\n}\r\n\r\nexport function getCheckFieldFormikProps(\r\n  formik,\r\n  key,\r\n  checkedValue = true\r\n  // unCheckedValue = false\r\n) {\r\n  const textFieldProps = getTextFieldFormikProps(formik, key);\r\n  // if (key === \"allowAttributeConfiguration\") {\r\n  //   console.log(textFieldProps.value);\r\n  // }\r\n  const value =\r\n    typeof checkedValue === \"boolean\"\r\n      ? !!textFieldProps.value\r\n      : textFieldProps.value;\r\n  return {\r\n    ...textFieldProps,\r\n    value: value,\r\n    checked: value === checkedValue,\r\n  };\r\n  // return {\r\n  //   checked: !!formik.values[key],\r\n  //   onChange: (e) => formik.setFieldValue(key, e.target.checked),\r\n  // };\r\n}\r\n"],"names":["prop","history","useNavigate","className","src","toDoorLogo","alt","onClick","props","error","rest","React","isVisible","setVisible","handleVisible","p","type","InputProps","endAdornment","position","disabled","clsx","enqueueSnackbar","useAuthUser","useSnackbar","UserApi","loginMuation","formik","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","console","log","data","unwrap","variant","message","style","paddingLeft","paddingRight","minWidth","maxWidth","handleSubmit","placeholder","name","getTextFieldFormikProps","color","href","minHeight","backgroundColor","trustedBy3","top","height","width","key","getFieldProps","touched","errors","helperText","focused"],"sourceRoot":""}