{"version":3,"file":"static/js/22.69f882c0.chunk.js","mappings":"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","sources":["common/Modal.js","features/trips/TripsMap.js","features/trips/Trips.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { RiErrorWarningLine } from \"react-icons/ri\";\r\nimport { post, get, put, del } from \"services/fetch\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  borderRadius: \"3%\",\r\n  // border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function BasicModal({\r\n  closeModal,\r\n  openModal,\r\n  suspend,\r\n  companyId,\r\n  deleteRider,\r\n}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  console.log(companyId);\r\n\r\n  // const deleteRider = async () => {\r\n  //   const res = await del({\r\n  //     endpoint: `api/super-admin/deleteRider?userId=${companyId}`,\r\n  //     //  body: { ...payload },\r\n  //     auth: true,\r\n  //   });\r\n  //   console.log(res.data.data);\r\n  //   //  setCompanyEarns(res.data.data);\r\n  // };\r\n  return (\r\n    <div>\r\n      {/* <Button onClick={handleOpen}>Open modal</Button> */}\r\n      <Modal\r\n        open={closeModal}\r\n        onClose={openModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <div className=\"flex justify-center text-center \">\r\n            <div className=\" text-center\">\r\n              <div className=\" flex justify-center \">\r\n                <RiErrorWarningLine\r\n                  style={{\r\n                    backgroundColor: suspend ? \" #FFB8001A\" : \"#FF004D1A\",\r\n                    color: suspend ? \" #F7AD2B\" : \"#FF0A36\",\r\n                    padding: \"2px\",\r\n                  }}\r\n                  fontSize={25}\r\n                />\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <Typography className=\"mb-4\" variant=\"h6\">\r\n                  {suspend ? \"Suspend\" : \"Delete\"} Account\r\n                </Typography>\r\n                <p>\r\n                  Are you sure you want to delete this rider? This action cannot\r\n                  be undone.\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex justify-between items-center mt-8\">\r\n                <Button\r\n                  onClick={openModal}\r\n                  className=\"w-[80%] mr-3 bg-white text-[#989898]\"\r\n                >\r\n                  Cancel\r\n                </Button>{\" \"}\r\n                <Button\r\n                  onClick={() => {\r\n                    deleteRider(companyId);\r\n                    openModal(false)\r\n                  }}\r\n                  className=\"w-[80%] bg-[#FF2828]\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            To be discussed\r\n          </Typography> */}\r\n          {/* <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n          </Typography> */}\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { arr } from \"react-icons/ai\";\r\nimport {\r\n  useJsApiLoader,\r\n  GoogleMap,\r\n  Marker,\r\n  Autocomplete,\r\n  DirectionsRenderer,\r\n} from \"@react-google-maps/api\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  TableBody,\r\n  TableCell,\r\n  Table,\r\n  Input,\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\n// import ManageCompanyCard from '.features/manageCompanies/ManageCompanyCard';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import { makeStyles } from '@mui/styles';\r\n\r\nfunction TripsMap({ route, width }) {\r\n  const [map, setMap] = useState(/** @type google.maps.map*/ (null));\r\n  const [distance, setDistance] = useState(/** @type google.maps.map*/ (null));\r\n  const [duration, setDuration] = useState(/** @type google.maps.map*/ (null));\r\n  const [directionResponse, setDirectionResponse] = useState(\r\n    /** @type google.maps.map*/ (null)\r\n  );\r\n  const [age, setAge] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  console.log(route);\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  // console.log(process.env.TO_DOOR_MAP_API_KEY)\r\n  // console.log(process.env.REACT_APP_SOFTWORK_API)\r\n\r\n  const calculateRoute = async (origin, destination) => {\r\n    if (origin == \"\" || destination == \"\") {\r\n      return;\r\n    }\r\n    //eslint-disable-next-line no-undef\r\n    const directionService = new google.maps.DirectionsService();\r\n    const result = await directionService.route({\r\n      origin: origin,\r\n      destination: destination,\r\n      //eslint-disable-next-line no-undef\r\n      travelMode: google.maps.TravelMode.DRIVING,\r\n    });\r\n    setDirectionResponse(result);\r\n    setDistance(result.routes[0].legs[0].distance.text);\r\n    setDuration(result.routes[0].legs[0].duration.text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(route.origin);\r\n    setTimeout(calculateRoute(route.origin, route.destination), 5000);\r\n  }, [route]);\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    // id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyAssvIlc0TbayfgN6C3rfGtlCXQckeystQ\",\r\n    // libraries: [\"places\"],\r\n  });\r\n  //   const {isLoaded} = useJsApiLoader({\r\n  //     googleMapsApiKey:'AIzaSyB6dttqGcdoqUQYT4rt4ZEd9_UOwP4GoMc',\r\n  //   })\r\n\r\n  if (!isLoaded) {\r\n    return <p>isloaded</p>;\r\n  }\r\n\r\n  //eslint-disable-next-line no-undef\r\n\r\n  const center = {\r\n    lat: 6.458985,\r\n    lng: 3.601521,\r\n  };\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: !width ? \"\" : \"38vw\",\r\n  };\r\n  return isLoaded ? (\r\n    <div className=\"w-[80%]\">\r\n      {/* <Autocomplete>\r\n            <input/>\r\n        </Autocomplete> */}\r\n\r\n      {/* <div className=\"mb-4\">\r\n            <Button onClick={()=>map.panTo(center)} className=' ml-3 px-7 py-2'>Heat Map</Button>\r\n            <Button  onClick={()=>calculateRoute('Apapa, Lagos', 'Ikeja, Lagos')} style={{color:'#8C8C8C'}} className=' ml-3 px-7 py-2 bg-transparent'>God's View</Button>\r\n        </div> */}\r\n      {width && (\r\n        <div className=\"flex w-1/3  items-center mr-5\">\r\n          <Typography className=\"w-full text-green-600\" variant=\"h6\">\r\n            {route.origin}\r\n          </Typography>\r\n          <AiOutlineArrowRight style={{ fontSize: \"40px\" }} />\r\n          <Typography className=\"w-full text-green-600 ml-5\" variant=\"h6\">\r\n            {route.destination}\r\n          </Typography>\r\n        </div>\r\n      )}\r\n\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        options={{\r\n          zoomControl: false,\r\n          streetViewControl: false,\r\n          mapTypeControl: false,\r\n          fullscreenControl: false,\r\n        }}\r\n        // onLoad={map => setMap(map)}\r\n        //   onUnmount={onUnmount}\r\n      >\r\n        {/* <Marker position={center} /> */}\r\n        {directionResponse && (\r\n          <DirectionsRenderer directions={directionResponse} />\r\n        )}\r\n        {/* Child components, such as markers, info windows, etc. */}\r\n        <></>\r\n      </GoogleMap>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default TripsMap;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\nimport ManageTripsTable from \"./ManageTripsTable\";\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  TableBody,\r\n  TableCell,\r\n  Table,\r\n  TextField,\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  Badge,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport TripsMap from \"./TripsMap\";\r\nimport { selectRowsFn } from \"@tanstack/react-table\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\n\r\n// import ManageCompanyCard from '.features/manageCompanies/ManageCompanyCard';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import { makeStyles } from '@mui/styles';\r\nimport { RiArrowLeftSLine } from \"react-icons/ri\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nimport moment from \"moment\";\r\n\r\nfunction Trips(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const [type, setType] = React.useState(\"all\");\r\n  const [tripz, setTripz] = React.useState([]);\r\n  const [newtripz, setNewTripz] = React.useState([]);\r\n  const [show, setShow] = React.useState(false);\r\n  const [route, setRoute] = React.useState({});\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event);\r\n  };\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const getAllRIderQueryResult = UserApi.useGetAllQuery({ userType: \"rider\" });\r\n  const totalRiders = getAllRIderQueryResult?.data?.data;\r\n\r\n  const getAllCompanyQueryResult = UserApi.useGetAllTripsQuery({\r\n    //  userType: \"company\",\r\n  });\r\n  const totalTrips = getAllCompanyQueryResult?.data||[];\r\n  let trips = totalTrips;\r\n  //  setTrips(totalTrips)\r\n  useEffect(() => {\r\n    // if (trips.length > 0) setTripz(trips);\r\n    setTripz(totalTrips);\r\n    setNewTripz([...totalTrips]);\r\n\r\n    // console.log(reversedArr)\r\n  }, [totalTrips]);\r\n\r\n  console.log(newtripz)\r\n\r\n  function createData(\r\n    origin,\r\n    destination,\r\n    rider,\r\n    orderId,\r\n    status,\r\n    fee,\r\n    departureDate,\r\n    arrivalDate,\r\n    timeDelay\r\n  ) {\r\n    return {\r\n      origin,\r\n      destination,\r\n      rider,\r\n      orderId,\r\n      status,\r\n      fee,\r\n      departureDate,\r\n      arrivalDate,\r\n      timeDelay,\r\n    };\r\n  }\r\n\r\n  const rows = [\r\n    createData(\r\n      \"Ikeja, Lagos\",\r\n      \"Apapa, Lagos\",\r\n      \"Taiwo Daniel\",\r\n      \"WXHDGDJKGG\",\r\n      \"Delivered\",\r\n      \"N200,000\",\r\n      \"11 Sept. 9:00am\",\r\n      \"15 Sept. 1:00am\",\r\n      \"-\"\r\n    ),\r\n    createData(\r\n      \"Lekki, Lagos\",\r\n      \"Apapa, Lagos\",\r\n      \"Taiwo Daniel\",\r\n      \"WXHDGDJKGG\",\r\n      \"Delivered\",\r\n      \"N200,000\",\r\n      \"11 Sept. 9:00am\",\r\n      \"15 Sept. 1:00am\",\r\n      \"-\"\r\n    ),\r\n    createData(\r\n      \"Yaba, Lagos\",\r\n      \"Apapa, Lagos\",\r\n      \"Taiwo Daniel\",\r\n      \"WXHDGDJKGG\",\r\n      \"Delivered\",\r\n      \"N200,000\",\r\n      \"11 Sept. 9:00am\",\r\n      \"15 Sept. 1:00am\",\r\n      \"-\"\r\n    ),\r\n    createData(\r\n      \"Sabo, Kaduna\",\r\n      \"Apapa, Lagos\",\r\n      \"Taiwo Daniel\",\r\n      \"WXHDGDJKGG\",\r\n      \"Delivered\",\r\n      \"N200,000\",\r\n      \"11 Sept. 9:00am\",\r\n      \"15 Sept. 1:00am\",\r\n      \"-\"\r\n    ),\r\n    // createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    // createData('Eclair', 262, 16.0, 24, 6.0),\r\n    // createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    // createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\n\r\n  const tableArray = [\r\n    {\r\n      image: gigLogo,\r\n      name: \"Nickky Samuel jonas  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n    },\r\n\r\n    {\r\n      image: gigLogo,\r\n      name: \"John jimmy Samuel  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      ratings: \"4\",\r\n    },\r\n  ];\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleShow = (e) => {\r\n    setShow(true);\r\n    setRoute(e);\r\n  };\r\n\r\n  const getRider = (id) => {\r\n    // console.log(id)\r\n    // console.log(riders);\r\n    let pp = totalRiders?.find((e) => e?._id == id);\r\n    return pp?.fname;\r\n  };\r\n\r\n  const filterTrips = (type) => {\r\n    if (type == \"all\") {\r\n      setTripz(totalTrips);\r\n    setNewTripz([...totalTrips]);\r\n\r\n    setType(type);\r\n\r\n      return\r\n    }\r\n    trips = totalTrips?.filter((e) => e?.tripRequestStatus == type);\r\n    if (trips.length > 0) {\r\n      setTripz(trips);\r\n    setNewTripz([...trips]);\r\n\r\n    } else {setTripz([]) \r\n    setNewTripz([]);\r\n    };\r\n    setType(type);\r\n    //  tripz.length > 0 ? tripz : totalTrips;\r\n    //  setTripz(trips)\r\n  };\r\n  function numberWithCommas(x) {\r\n    // serPrice.value = x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    //  formState.target_amount=cleanupNumber(serPrice.value)\r\n    return x?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <ToDoorSearch /> */}\r\n      {!show && (\r\n        <div>\r\n          <div\r\n            className=\"flex justify-between mb-8 items-center\"\r\n            style={{ backGroundColor: \"#1E1E1E\" }}\r\n          >\r\n            {/* <img src = {gigLogo}/> */}\r\n\r\n            <div className=\"flex justify-between w-2/5\">\r\n              <Typography variant=\"h5\" className=\"font-bold text-blue-800 \">\r\n                Trips\r\n              </Typography>\r\n              <Button\r\n                onClick={() => filterTrips(\"all\")}\r\n                color={type == \"all\" ? \"primary\" : \"buttonhead\"}\r\n                className=\" ml-5 px-16\"\r\n              >\r\n                All\r\n              </Button>\r\n              <Button\r\n                onClick={() => filterTrips(\"completed\")}\r\n                color={type == \"completed\" ? \"primary\" : \"buttonhead\"}\r\n                className={\"ml-4 px-16\"}\r\n              >\r\n                Confirmed\r\n              </Button>\r\n              <Button\r\n                onClick={() => filterTrips(\"enRoute\")}\r\n                color={type == \"enRoute\" ? \"primary\" : \"buttonhead\"}\r\n                className=\"ml-4 px-16\"\r\n              >\r\n                Enroute\r\n              </Button>\r\n              {/* <Badge badgeContent={4} color=\"error\"> */}\r\n              <Button\r\n                onClick={() => filterTrips(\"request\")}\r\n                className=\" ml-3 px-12\"\r\n                color={type == \"request\" ? \"primary\" : \"buttonhead\"}\r\n              >\r\n                Pending\r\n              </Button>\r\n              {/* </Badge>{\" \"} */}\r\n              <Button\r\n                onClick={() => filterTrips(\"rejected\")}\r\n                color={type == \"rejected\" ? \"primary\" : \"buttonhead\"}\r\n                className=\" ml-5 px-16\"\r\n              >\r\n                Declined\r\n              </Button>\r\n            </div>\r\n\r\n            {/* <div>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <div className=\"flex-between\">\r\n                  <DatePicker\r\n                    className=\" mr-8 w-full\"\r\n                    // label=\"Basic example\"\r\n                    // value={start_date}\r\n                    onChange={(newValue) => {\r\n                      // console.log(newValue)\r\n                      // setWorkList({ ...workList, start_date: newValue });\r\n                      // setStart_date(newValue);\r\n                      // setValue(newValue);\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </div>\r\n              </LocalizationProvider>\r\n            </div> */}\r\n          </div>\r\n\r\n          <div\r\n            sx={{ minWidth: 650, backgroundColor: \"#EBEBEB\" }}\r\n            aria-label=\"simple table\"\r\n          >\r\n            {/* <TableHead\r\n              sx={{\r\n                padding: \"100px\",\r\n                backgroundColor: \"#EBEBEB\",\r\n                border: \"2px solid red\",\r\n              }}\r\n              className=\"mb-4\"\r\n            >\r\n              <TableRow sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}>\r\n                <TableCell sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}>\r\n                  Origin\r\n                </TableCell>\r\n                <TableCell sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}>\r\n                  Destination\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Rider\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Order ID&nbsp;(g)\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Status&nbsp;(g)\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Fee&nbsp;(g)\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Departure Date&nbsp;(g)\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Arrival Date&nbsp;(g)\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Action&nbsp;(g)\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead> */}\r\n\r\n            <div\r\n              //   onClick={openBelow}\r\n              style={{ border: \"1px solid #DADADA\" }}\r\n              className=\" cursor-pointer mt-2 flex border2 background-table min-h-[50%]\"\r\n            >\r\n              <div className=\"w-[11.11%] text-center  px-3 py-3\">\r\n                <h6 className=\"font-bold text-[#454647]\">Origin</h6>\r\n                <Typography variant=\"h6\"></Typography>\r\n              </div>\r\n              <div className=\"w-[11.11%] text-center  px-3 py-3\">\r\n                <h6 className=\"font-bold text-[#454647]\">Destination</h6>\r\n                <Typography variant=\"h6\">{tableArray.company}</Typography>\r\n              </div>\r\n              <div className=\"w-[11.11%] text-center  px-3 py-3\">\r\n                <h6 className=\"font-bold text-[#454647]\">Rider</h6>\r\n                <Typography variant=\"h6\">{tableArray.id}</Typography>\r\n              </div>\r\n\r\n              <div className=\"w-[19.11%] text-center  px-3 py-3\">\r\n                <h6 className=\"font-bold text-[#454647]\">Company Name</h6>\r\n              </div>\r\n              <div className=\"w-[11.11%] text-center  px-3 py-3\">\r\n                <h6 className=\"font-bold text-[#454647]\">Status</h6>\r\n              </div>\r\n              <div className=\"w-[11.11%] text-center  px-3 py-3\">\r\n                <h6 className=\"font-bold text-[#454647]\">Fee</h6>\r\n              </div>\r\n              <div className=\"w-[11.11%] text-center  px-3 py-3\">\r\n                <h6 className=\"font-bold text-[#454647]\">Request Time</h6>\r\n              </div>\r\n              <div className=\"w-[11.11%] text-center  px-3 py-3\">\r\n                <h6 className=\"font-bold text-[#454647]\">Arrival Date</h6>\r\n              </div>\r\n              <div className=\"w-[11.11%] text-center  px-3 py-3\">\r\n                <h6 className=\"font-bold text-[#454647]\">Total Time Spent</h6>\r\n              </div>\r\n              {/* *Put back Action */}\r\n\r\n              {/* <div className=\"w-[11.11%] text-center  px-3 py-3\">\r\n                <h6 className=\"font-bold text-[#454647]\">Action</h6>\r\n              </div> */}\r\n            </div>\r\n            {newtripz?.length > 0 ? (\r\n              <div className=\"mt-3 background-table\">\r\n                {newtripz?.map((row, idx) => (\r\n                  <div\r\n                    className=\"flex\"\r\n                    key={idx}\r\n                    sx={{\r\n                      \"&:last-child td, &:last-child th\": { border: 0 },\r\n                      marginTop: 10,\r\n                      backgroundColor: \"\",\r\n                    }}\r\n                  >\r\n                    <div className=\"w-[11.11%] border3b px-3 py-3  text-center\">\r\n                      {row?.pickUpAddress}\r\n                    </div>\r\n                    <div className=\"w-[11.11%]  px-3 py-3  border3b text-center\">\r\n                      {row?.destAddress}\r\n                    </div>\r\n                    <div className=\"w-[11.11%]  px-3 py-3  border3b text-center\">\r\n                      {(row?.riderId?.fname) || \"-\"}\r\n                    </div>\r\n                    <div className=\"w-[19.11%]  px-3 py-3  border3b text-center\">\r\n                      {(row?.companyId?.fname)||'-'}\r\n                    </div>\r\n                    <div className=\"w-[11.11%]  px-3 py-3  border3b text-center\">\r\n                      <p className=\"bg-[#03732930] px-3 py-1 text-[#0C3BAA] font-semibold\">\r\n                        {row?.tripRequestStatus}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"w-[11.11%]  px-3 py-3  border3b text-center\">\r\n                      ₦ {numberWithCommas(row?.tripAmt.toFixed(2))}\r\n                    </div>\r\n                    <div className=\"w-[11.11%]  px-3 py-3  border3b text-center\">\r\n                      {moment(row.requestTime)?.format(\"ll\") || \"-\"}\r\n                      <Typography className=\"text-xs text-gray-500\">\r\n                        {moment(row.requestTime)?.format(\" H:mm:ss\") || \"-\"}\r\n                      </Typography>\r\n                    </div>\r\n                    <div className=\"w-[11.11%]  px-3 py-3  border3b text-center\">\r\n                      {row.arrivalDate || \"-\"}\r\n                    </div>\r\n                    <div className=\"w-[11.11%]  px-3 py-3  border3b text-center\">\r\n                      -\r\n                    </div>\r\n                    {/* <div className=\"w-[15%]  px-3 py-3  border3b text-center\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        handleShow(row);\r\n                      }}\r\n                    >\r\n                      View Route\r\n                    </Button>\r\n                  </div> */}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              \"No data\"\r\n            )}\r\n          </div>\r\n\r\n          {/* <Table\r\n            sx={{ minWidth: 650, backgroundColor: \"#EBEBEB\" }}\r\n            aria-label=\"simple table\"\r\n          >\r\n            <TableHead\r\n              sx={{\r\n                padding: \"100px\",f\r\n                backgroundColor: \"#EBEBEB\",\r\n                border: \"2px solid red\",\r\n              }}\r\n              className=\"mb-4\"\r\n            >\r\n              <TableRow sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}>\r\n                <TableCell sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}>\r\n                  Origin\r\n                </TableCell>\r\n                <TableCell sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}>\r\n                  Destination\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Rider\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Order ID&nbsp;(g)\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Status&nbsp;(g)\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Fee&nbsp;(g)\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Departure Date&nbsp;(g)\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Arrival Date&nbsp;(g)\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ marginBottom: 5, backgroundColor: \"#EBEBEB\" }}\r\n                  align=\"right\"\r\n                >\r\n                  Action&nbsp;(g)\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow\r\n                  key={row.name}\r\n                  sx={{\r\n                    \"&:last-child td, &:last-child th\": { border: 0 },\r\n                    marginTop: 10,\r\n                    backgroundColor: \"\",\r\n                  }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.origin}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.destination}</TableCell>\r\n                  <TableCell align=\"right\">{row.rider}</TableCell>\r\n                  <TableCell align=\"right\">{row.orderId}</TableCell>\r\n                  <TableCell align=\"right\">{row.status}</TableCell>\r\n                  <TableCell align=\"right\">{row.fee}</TableCell>\r\n                  <TableCell align=\"right\">{row.departureDate}</TableCell>\r\n                  <TableCell align=\"right\">{row.arrivalDate}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        handleShow(row);\r\n                      }}\r\n                    >\r\n                      View Route\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table> */}\r\n        </div>\r\n      )}\r\n\r\n      {/* <ManageTripsTable tableArray={tableArray} /> */}\r\n\r\n      {show && (\r\n        <div>\r\n          <div>\r\n            <div\r\n              onClick={() => setShow(!show)}\r\n              className=\"flex items-center mb-8 cursor-pointer w-16 p-2\"\r\n            >\r\n              <div\r\n                style={{ border: \"1px solid #494949\" }}\r\n                className=\"border-solid w-5 mr-2 rounded h-5 flex justify-center items-center\"\r\n              >\r\n                <RiArrowLeftSLine\r\n                  className=\"\"\r\n                  style={{ fontSize: \"22px\", color: \"#494949\" }}\r\n                />\r\n              </div>\r\n              <p style={{ color: \"#494949\" }} className=\"text-base\">\r\n                Back\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"w-full flex items-center justify-center\">\r\n        {/* <TripsMap route={route} width={show} /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Trips;\r\n"],"names":["style","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","p","BasicModal","closeModal","openModal","suspend","companyId","deleteRider","React","console","log","open","onClose","sx","className","backgroundColor","color","padding","fontSize","variant","onClick","props","type","setType","setTripz","newtripz","setNewTripz","show","setShow","history","useNavigate","getAllRIderQueryResult","UserApi","userType","getAllCompanyQueryResult","data","totalTrips","trips","createData","origin","destination","rider","orderId","status","fee","departureDate","arrivalDate","timeDelay","useEffect","tableArray","image","gigLogo","name","company","Id","ratings","enqueueSnackbar","useAuthUser","useSnackbar","loginMuation","filterTrips","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","unwrap","message","filter","e","tripRequestStatus","length","numberWithCommas","x","toString","replace","backGroundColor","Button","minWidth","border","id","map","row","idx","marginTop","pickUpAddress","destAddress","riderId","fname","tripAmt","toFixed","moment","requestTime","format"],"sourceRoot":""}