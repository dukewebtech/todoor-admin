{"version":3,"file":"static/js/630.8dc39ac1.chunk.js","mappings":"2XAkbA,UA9XA,SAAsBA,GAAQ,IAAD,gBACrBC,GAAUC,EAAAA,EAAAA,MAChB,GAAgCC,EAAAA,EAAAA,UAAS,SAAzC,eAAOC,EAAP,KACA,GADA,MAC4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAgCH,EAAAA,EAAAA,UAAS,IAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAA2BC,EAAAA,EAAAA,eAAuB,CACtDN,SAAU,YAENO,EAAkCD,EAAAA,EAAAA,6BACtC,CAAC,GAEH,GAAoCP,EAAAA,EAAAA,UAAS,IAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KAEMC,EAAiB,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAiCI,KACrDC,EAAc,OAAGP,QAAH,IAAGA,GAAH,UAAGA,EAA0BM,YAA7B,aAAG,EAAgCA,KAEjDE,EAAyBP,EAAAA,EAAAA,eAAuB,CAAEN,SAAU,UAG5Dc,GAFW,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAwBF,YAA3B,OAAG,EAA8BA,KAEtB,OAAGL,EAAAA,QAAH,IAAGA,EAAAA,OAAH,EAAGA,EAAAA,EAAAA,oBAA6B,CAAEL,OAAAA,KACxDc,IAAa,OAACF,QAAD,IAACA,GAAD,UAACA,EAAwBF,YAAzB,iBAAC,EAA8BK,YAA/B,aAAC,EAAoCC,gBAGlDC,GAFM,OAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAAwBH,YAA3B,OAAG,EAA8BA,KAETL,EAAAA,EAAAA,uBAA+B,CACjEN,SAAAA,EACAmB,UAAU,EACVlB,OAAAA,KAEImB,EAA4Bd,EAAAA,EAAAA,uBAA+B,CAC/DN,SAAAA,EACAmB,UAAU,EACVlB,OAAAA,IAEIoB,EAAkB,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAA2BT,YAA9B,aAAG,EAAiCA,KACtDW,EAAoB,OAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAA6BP,YAAhC,aAAG,EAAmCA,KAE1DY,GAAe,SAACC,GACpBtB,EAAUsB,GAEVC,QAAQC,IAAIF,EACb,GAEDG,EAAAA,EAAAA,YAAU,WACRC,IACD,GAAE,CAAC3B,IAqBJ,IAnBA,IAAM2B,GAAQ,yCAAG,4GACGC,EAAAA,EAAAA,IAAI,CACpBC,SAAS,gDAAD,OAAkD7B,GAC1D8B,MAAM,IAHO,OACTC,EADS,OAKf5B,EAAW,OAAC4B,QAAD,IAACA,GAAD,UAACA,EAAKrB,YAAN,aAAC,EAAWA,MAEvBc,QAAQC,IAAIM,EAAIrB,KAAKA,MAPN,2CAAH,qDAURsB,GAAW,yCAAG,WAAOC,GAAP,uFACAC,EAAAA,EAAAA,IAAI,CACpBL,SAAS,sCAAD,OAAwCI,GAChDH,MAAM,IAHU,cAKlBH,KALkB,2CAAH,sDAQXQ,GAAc,GACXC,GAAI,EAAGA,IAAKtB,EAAYsB,KAC/BD,GAAYE,KAAKD,IAGnB,IAIME,GAAiB,SAACL,GACtB,GAAItB,GAAkBT,GAAY+B,EAAI,CACpC,IAAIM,EAAW5B,EAAe6B,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOT,CAAhB,IAEnC,OADAT,QAAQC,IAAR,OAAYc,QAAZ,IAAYA,OAAZ,EAAYA,EAAUI,OACfJ,CACR,CACF,EAEKK,GAAS,OAAG1C,QAAH,IAAGA,OAAH,EAAGA,EAAU2C,KAAI,SAACJ,GAAD,YAAQ,CACtCK,MAAK,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAGM,WACVC,KAAK,GAAD,cAAKP,QAAL,IAAKA,OAAL,EAAKA,EAAGE,OACZM,QAAU,OAADR,QAAC,IAADA,GAAAA,EAAGS,UAAH,UACLZ,GAAc,OAACG,QAAD,IAACA,OAAD,EAACA,EAAGS,kBADb,aACL,EAA8BP,MAC9B,kBACJV,GAAE,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAGU,MAEPC,QAASC,IAAM,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAGa,YAAYC,OAAO,MACtCC,eAAgB,IAChBC,QAAO,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAGgB,QACZC,OAAM,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAGkB,cACXC,OAAM,OAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAGC,IACXxB,SAAQ,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAGvB,SACb2C,KAAMpB,EAdwB,IAiBhCjB,QAAQC,IAAImB,KAoBKkB,EAAAA,EAAAA,KAlBjB,IAoBQC,IAAoBC,EAAAA,EAAAA,MAApBD,gBACR,GAA4C1D,EAAAA,EAAAA,mBAA5C,iBAAO4D,GAAP,MAiCMC,IAjCN,OAEeC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,SAAU,GACVC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,SAAUG,EAAAA,KAAaC,OAAOC,WAC9BJ,SAAUE,EAAAA,KAAaC,OAAOC,aAEhCC,SAAS,WAAD,8BAAE,WAAOC,GAAP,mFACRpD,QAAQC,IAAImD,GA/DdhF,EAAQ,oBA8DE,kBAMaqE,GAAa,CAAEvD,KAAMkE,IAAUC,SAN5C,cASNd,GAAgB,uBAAwB,CAAEe,QAAS,YAT7C,gDAWNf,GAAe,OAAC,EAAD,6BAAC,KAAOrD,YAAR,aAAC,EAAaqE,QAAS,kBAAmB,CACvDD,QAAS,UAZL,yDAAF,mDAAC,KAsBS,SAACE,EAAKC,GAGxBzD,QAAQC,IAAIuD,GAEVxE,EADEyE,EACW,OACXD,QADW,IACXA,OADW,EACXA,EAAKnC,KAAI,SAACJ,GAAD,YAAQ,CACfK,MAAK,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAGM,WACVC,KAAK,GAAD,cAAKP,QAAL,IAAKA,OAAL,EAAKA,EAAGE,OACZM,QAAU,OAADR,QAAC,IAADA,GAAAA,EAAGS,UAAH,UACLZ,GAAc,OAACG,QAAD,IAACA,OAAD,EAACA,EAAGS,kBADb,aACL,EAA8BP,MAC9B,kBACJV,GAAE,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAGU,MAEPC,QAASC,IAAM,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAGa,YAAYC,OAAO,MACtCC,eAAgB,IAChBC,QAAO,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAGgB,QACZC,OAAM,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAGkB,cACXC,OAAM,OAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAGC,IACXxB,SAAQ,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAGvB,SACb2C,KAAMpB,EAdC,IAkBG,GAEjB,GAED,OACE,4BAQE,iBAAKyC,UAAU,kCAAf,WACE,gBACEA,UAAU,4BACVC,QAAS,WACPjB,GAAYhE,GAAU,EACvB,EAJH,UAME,SAAC,IAAD,CACEgF,UAAU,OACVE,OAAO,EACPC,KAAK,EACLC,OAAO,EACPtC,KAAK,eACLuC,MAAK,OAAE9E,QAAF,IAAEA,OAAF,EAAEA,EAAmB+E,kBAG9B,4BACE,gBAAKN,UAAU,mBAAf,UACE,iBACEA,UAAU,6CACVO,MAAO,CAAEC,IAAK,SAFhB,WAIE,iBAAKR,UAAU,OAAf,WACE,cAAGA,UAAU,sCAAb,oBACA,0BACE,SAAC,MAAD,CACEA,UAAU,GACVO,MAAO,CAAEE,SAAU,OAAQC,MAAO,mBAIxC,iBAAKV,UAAU,oBAAf,WACE,iBAAMA,UAAU,0BAAhB,UACE,SAAC,MAAD,OAEF,iBAAMA,UAAU,qBAAhB,8BAIN,iBAAKA,UAAU,OAAf,WACE,gBACEA,UAAU,uBACVC,QAAS,WACPjB,GAAY9C,GAAoB,EACjC,EAJH,UAME,SAAC,IAAD,CACEyE,OAAO,EACP7C,KAAK,WACLuC,MAAK,OAAE9E,QAAF,IAAEA,OAAF,EAAEA,EAAmBqF,oBAG9B,gBACEZ,UAAU,uBACVC,QAAS,WACPjB,GAAY7C,GAAsB,EACnC,EAJH,UAME,SAAC,IAAD,CACEwE,OAAO,EACP7C,KAAK,cACLuC,MAAK,OAAE9E,QAAF,IAAEA,OAAF,EAAEA,EAAmBsF,+BAWpC,SAAC,IAAD,CAAYjB,QAAQ,KAAKI,UAAU,mCAAnC,wBAhFF,UAiIK3E,EAAWyF,QAAUzF,GAAeqC,UAjIzC,aAiIG,EAAkDC,KAAI,SAACJ,EAAGwD,GAAJ,OACrD,SAAC,IAAD,CACEjE,YAAaA,GACbkE,WAAYzD,EAEZoB,KAAMpB,EAAEoB,KACRlC,SAAUA,IAFLsE,EAJ8C,KASvD,gBAAKf,UAAU,2BAAf,UACE,gBAAIA,UAAU,OAAd,UACGlF,EAAS,IACR,yBACE,cACEmG,KAAK,IACLhB,QAAS,kBAAM7D,GAAatB,EAAS,EAA5B,EACTkF,UAAU,yEAHZ,oBASH/C,GAAYU,KAAI,SAACuD,GAAD,OACf,yBACE,cACED,KAAK,IACLhB,QAAS,kBAAM7D,GAAa8E,EAAnB,EACTlB,UACElF,IAAWoG,EACP,iDACA,iCANR,SASGA,KAVIA,EADM,IAehBpG,EAASmC,GAAY6D,SACpB,yBACE,cACEG,KAAK,IACLhB,QAAS,kBAAM7D,GAAatB,EAAS,EAA5B,EACTkF,UAAU,yEAHZ,2BA4Bb,C","sources":["features/manageRider/ManageRiders.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n// import { Button, TextField, Typography } from \"@mui/material\";\r\nimport PasswordTextField from \"common/PasswordTextField\";\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport useAuthUser from \"hooks/useAuthUser\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RouteEnum } from \"constants/RouteConstants\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport toDoorLogo from \"images/Ellipse 30.png\";\r\n// import ManageCompanyCard from 'common/ManageCompanyCard'\r\n\r\n// import { RouteEnum } from \"constants/RouteConstants\";\r\n// import ReactDOM from 'react-dom';\r\n// import trustedBy1 from './images/Vector.png'\r\nimport gigLogo from \"images/Ellipse 56.png\";\r\nimport trustedBy3 from \"images/Rectangle 106.png\";\r\n// import LoginHeader from './LoginHeader';\r\n// import trustedBy3 from './images/trustedBy-3.png'\r\n// import trustedBy4 from './images/trustedBy-4.png'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Input,\r\n  MenuItem,\r\n  Rating,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WallCards from \"common/WallCards\";\r\nimport ManageCompanyCard from \"features/manageCompanies/ManageCompanyCard\";\r\nimport ManageCompaniesTable from \"features/manageCompanies/ManageCompaniesTable\";\r\n\r\nimport {\r\n  RiArrowDownSFill,\r\n  RiArrowDownSLine,\r\n  RiArrowLeftSLine,\r\n} from \"react-icons/ri\";\r\nimport { MdRefresh } from \"react-icons/md\";\r\nimport ToDoorSearch from \"common/ToDoorSearch\";\r\nimport moment from \"moment\";\r\nimport { del, get, post } from \"services/fetch\";\r\nfunction ManageRiders(props) {\r\n  const history = useNavigate();\r\n  const [userType, setUserType] = useState(\"rider\");\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [allBikez, setAllBikez] = useState([]);\r\n\r\n  const getAllCompanyQueryResult = UserApi.useGetAllQuery({\r\n    userType: \"company\",\r\n  });\r\n  const getCompanyStatisticsQueryResult = UserApi.useGetCompanyStatisticsQuery(\r\n    {}\r\n  );\r\n  const [mappingVal, setMappingVal] = useState([]);\r\n\r\n  const companyStatistics = getCompanyStatisticsQueryResult?.data;\r\n  const totalCompanies = getAllCompanyQueryResult?.data?.data;\r\n\r\n  const getAllRIderQueryResult = UserApi.useGetAllQuery({ userType: \"rider\" });\r\n  const totalRiders = getAllRIderQueryResult?.data?.data;\r\n\r\n  const getAllBikesQueryResult = UserApi?.useGetAllBikesQuery({ pageNo });\r\n  const totalPages = +getAllRIderQueryResult?.data?.meta?.totalNoOfPages;\r\n  const bikers = getAllBikesQueryResult?.data?.data;\r\n\r\n  const getAllUnVerifiedQueryResult = UserApi.useGetAllVerifiedQuery({\r\n    userType,\r\n    verified: false,\r\n    pageNo,\r\n  });\r\n  const getAllVerifiedQueryResult = UserApi.useGetAllVerifiedQuery({\r\n    userType,\r\n    verified: true,\r\n    pageNo,\r\n  });\r\n  const totalVerifiedUsers = getAllVerifiedQueryResult?.data?.data;\r\n  const totalUnverifiedUsers = getAllUnVerifiedQueryResult?.data?.data;\r\n\r\n  const onPageChange = (page) => {\r\n    setPageNo(page);\r\n\r\n    console.log(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBikes();\r\n  }, [pageNo]);\r\n\r\n  const getBikes = async () => {\r\n    const res = await get({\r\n      endpoint: `api/company/getalluser?userType=rider&pageNo=${pageNo}`,\r\n      auth: true,\r\n    });\r\n    setAllBikez(res?.data?.data);\r\n\r\n    console.log(res.data.data);\r\n  };\r\n\r\n  const deleteBikes = async (id) => {\r\n    const res = await del({\r\n      endpoint: `api/super-admin/deleteRider?userId=${id}`,\r\n      auth: true,\r\n    });\r\n    getBikes();\r\n  };\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const redirect = () => {\r\n    history(\"/complete-signUp\");\r\n  };\r\n\r\n  const getCompanyName = (id) => {\r\n    if (totalCompanies && allBikez && id) {\r\n      let compName = totalCompanies.find((e) => e._id == id);\r\n      console.log(compName?.fname);\r\n      return compName;\r\n    }\r\n  };\r\n\r\n  const allRiders = allBikez?.map((e) => ({\r\n    image: e?.profileUrl,\r\n    name: `${e?.fname}`,\r\n    company: e?.companyId\r\n      ? getCompanyName(e?.companyId)?.fname\r\n      : \"Self Registered\",\r\n    id: e?.email,\r\n    // ratings: e.userRating && e.userRating !== 0 ? e.userRating : \"4\",\r\n    ratings: moment(e?.created_at).format(\"ll\"),\r\n    tripsCompleted: \"-\",\r\n    phoneNo: e?.phoneNo,\r\n    status: e?.currTripState,\r\n    userId: e?._id,\r\n    verified: e?.verified,\r\n    info: e,\r\n  }));\r\n\r\n  console.log(allRiders);\r\n\r\n  const tableArray = [\r\n    {\r\n      image: gigLogo,\r\n      name: \"Nickky Samuel jonas  \",\r\n      company: \"GIG Logistics\",\r\n      Id: \"2234456\",\r\n      userRating: \"4\",\r\n    },\r\n\r\n    // {\r\n    //   image: gigLogo,\r\n    //   name: \"John jimmy Samuel  \",\r\n    //   company: \"GIG Logistics\",\r\n    //   Id: \"2234456\",\r\n    //   ratings: \"4\",\r\n    // },\r\n  ];\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      // localStorage.setItem('location', values.location)\r\n      redirect();\r\n\r\n      try {\r\n        const data = await loginMuation({ data: values }).unwrap();\r\n        // TODO extra login\r\n        // redirect()\r\n        enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      } catch (error) {\r\n        enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  // if (authUser.accessToken) {\r\n  //   return <Navigate to={RouteEnum.HOME} />;\r\n  // }\r\n\r\n  const newsDisplay = (val, bol) => {\r\n    // console.log(\"Samson\"?.includes(val));\r\n    // console.log(companyRiders);\r\n    console.log(val);\r\n    if (bol)\r\n      setMappingVal(\r\n        val?.map((e) => ({\r\n          image: e?.profileUrl,\r\n          name: `${e?.fname}`,\r\n          company: e?.companyId\r\n            ? getCompanyName(e?.companyId)?.fname\r\n            : \"Self Registered\",\r\n          id: e?.email,\r\n          // ratings: e.userRating && e.userRating !== 0 ? e.userRating : \"4\",\r\n          ratings: moment(e?.created_at).format(\"ll\"),\r\n          tripsCompleted: \"-\",\r\n          phoneNo: e?.phoneNo,\r\n          status: e?.currTripState,\r\n          userId: e?._id,\r\n          verified: e?.verified,\r\n          info: e,\r\n        }))\r\n      );\r\n    else {\r\n      setMappingVal([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <ToDoorSearch /> */}\r\n      {/* <div className=\"flex items-center\" style={{ backGroundColor: \"#1E1E1E\" }}>\r\n        <img src={gigLogo} />\r\n        <Typography variant=\"h5\" className=\"font-bold ml-4 \">\r\n          GIG LOGISTICS\r\n        </Typography>\r\n      </div> */}\r\n      <div className=\"flex items-end mr-3 mt-12 w-3/6\">\r\n        <div\r\n          className=\"mr-4 hover:cursor-pointer\"\r\n          onClick={() => {\r\n            newsDisplay(allBikez, false);\r\n          }}\r\n        >\r\n          <WallCards\r\n            className=\"mr-3\"\r\n            rider={false}\r\n            big={true}\r\n            green={true}\r\n            name=\"Total Riders\"\r\n            count={companyStatistics?.total_riders}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className=\"relative w-full \">\r\n            <div\r\n              className=\"flex-between px-2 w-full text-xs absolute \"\r\n              style={{ top: \"-20px\" }}\r\n            >\r\n              <div className=\"flex\">\r\n                <p className=\"font-bold mr-1 flextext-xs self-end\">Today</p>\r\n                <div>\r\n                  <RiArrowDownSLine\r\n                    className=\"\"\r\n                    style={{ fontSize: \"16px\", color: \"#494949\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <span className=\"text-xs mr-1 opacity-50\">\r\n                  <MdRefresh />\r\n                </span>\r\n                <span className=\"text-xs opacity-50\">Refresh</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex\">\r\n            <div\r\n              className=\"hover:cursor-pointer\"\r\n              onClick={() => {\r\n                newsDisplay(totalVerifiedUsers, true);\r\n              }}\r\n            >\r\n              <WallCards\r\n                short={true}\r\n                name=\"Verified\"\r\n                count={companyStatistics?.verified_rider}\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"hover:cursor-pointer\"\r\n              onClick={() => {\r\n                newsDisplay(totalUnverifiedUsers, true);\r\n              }}\r\n            >\r\n              <WallCards\r\n                short={true}\r\n                name=\"Un-Verified\"\r\n                count={companyStatistics?.unverified_rider}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <WallCards name='Total Raiders' count='116,019'/>\r\n          <WallCards name='Rides in progress' count='13'/>\r\n          <WallCards name='Active vehicles' count='8'/>\r\n          <WallCards name='Earnings' count='3,000,000'/> */}\r\n      </div>\r\n      <Typography variant=\"h5\" className=\"font-bold mt-8 text-primary-main\">\r\n        All Riders\r\n      </Typography>\r\n\r\n\r\n      \r\n      {/* <nav className=\"flex justify-center\">\r\n        <ul className=\"flex\">\r\n          {pageNo > 1 && (\r\n            <li>\r\n              <a\r\n                href=\"#\"\r\n                onClick={() => onPageChange(pageNo - 1)}\r\n                className=\"py-2 px-4 bg-gray-400 text-white font-bold rounded-l hover:bg-gray-600\"\r\n              >\r\n                Prev\r\n              </a>\r\n            </li>\r\n          )}\r\n          {pageNumbers.map((number) => (\r\n            <li key={number}>\r\n              <a\r\n                href=\"#\"\r\n                onClick={() => onPageChange(number)}\r\n                className={\r\n                  pageNo === number\r\n                    ? \"py-2 px-4 bg-primary-main text-white font-bold\"\r\n                    : \"py-2 px-4 hover:bg-gray-400/10\"\r\n                }\r\n              >\r\n                {number}\r\n              </a>\r\n            </li>\r\n          ))}\r\n          {pageNo < pageNumbers.length && (\r\n            <li>\r\n              <a\r\n                href=\"#\"\r\n                onClick={() => onPageChange(pageNo + 1)}\r\n                className=\"py-2 px-4 bg-gray-400 text-white font-bold rounded-r hover:bg-gray-600\"\r\n              >\r\n                Next\r\n              </a>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav> */}\r\n      {/* ( (mappingVal.length && mappingVal) || // (mappingValCompany.length &&\r\n      mappingValCompany) || totalCompanies ) */}\r\n      {((mappingVal.length && mappingVal) || allRiders)?.map((e, idx) => (\r\n        <ManageCompaniesTable\r\n          deleteBikes={deleteBikes}\r\n          tableArray={e}\r\n          key={idx}\r\n          info={e.info}\r\n          getBikes={getBikes}\r\n        />\r\n      ))}\r\n      <nav className=\"flex justify-center mt-5\">\r\n        <ul className=\"flex\">\r\n          {pageNo > 1 && (\r\n            <li>\r\n              <a\r\n                href=\"#\"\r\n                onClick={() => onPageChange(pageNo - 1)}\r\n                className=\"py-2 px-4 bg-gray-400 text-white font-bold rounded-l hover:bg-gray-600\"\r\n              >\r\n                Prev\r\n              </a>\r\n            </li>\r\n          )}\r\n          {pageNumbers.map((number) => (\r\n            <li key={number}>\r\n              <a\r\n                href=\"#\"\r\n                onClick={() => onPageChange(number)}\r\n                className={\r\n                  pageNo === number\r\n                    ? \"py-2 px-4 bg-primary-main text-white font-bold\"\r\n                    : \"py-2 px-4 hover:bg-gray-400/10\"\r\n                }\r\n              >\r\n                {number}\r\n              </a>\r\n            </li>\r\n          ))}\r\n          {pageNo < pageNumbers.length && (\r\n            <li>\r\n              <a\r\n                href=\"#\"\r\n                onClick={() => onPageChange(pageNo + 1)}\r\n                className=\"py-2 px-4 bg-gray-400 text-white font-bold rounded-r hover:bg-gray-600\"\r\n              >\r\n                Next\r\n              </a>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n      {/* <div className=\"flex justify-between my-7\">\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                    </div>\r\n                    <div className=\"flex justify-between my-7\">\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                    </div>\r\n                    <div className=\"flex justify-between my-7\">\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                        <ManageCompanyCard/>\r\n                    </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageRiders;\r\n"],"names":["props","history","useNavigate","useState","userType","pageNo","setPageNo","allBikez","setAllBikez","getAllCompanyQueryResult","UserApi","getCompanyStatisticsQueryResult","mappingVal","setMappingVal","companyStatistics","data","totalCompanies","getAllRIderQueryResult","getAllBikesQueryResult","totalPages","meta","totalNoOfPages","getAllUnVerifiedQueryResult","verified","getAllVerifiedQueryResult","totalVerifiedUsers","totalUnverifiedUsers","onPageChange","page","console","log","useEffect","getBikes","get","endpoint","auth","res","deleteBikes","id","del","pageNumbers","i","push","getCompanyName","compName","find","e","_id","fname","allRiders","map","image","profileUrl","name","company","companyId","email","ratings","moment","created_at","format","tripsCompleted","phoneNo","status","currTripState","userId","info","useAuthUser","enqueueSnackbar","useSnackbar","loginMuation","newsDisplay","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","unwrap","variant","message","val","bol","className","onClick","rider","big","green","count","total_riders","style","top","fontSize","color","short","verified_rider","unverified_rider","length","idx","tableArray","href","number"],"sourceRoot":""}